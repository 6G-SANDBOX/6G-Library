---
- name: "STAGE 1: Prepare to access a previous target component"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Load enviromental variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/load_variables.yaml"

    - name: Prepare terraform working directory
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/terraform_workdir.yaml"

    - name: Retrieve terraform outputs
      ansible.builtin.shell:
      args:
        chdir: "{{ workspace }}/.terraform/"
        cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
        executable: /bin/bash
      register: terraform_outputs
      changed_when: false

    - name: Set Terraform outputs as playbook facts
      ansible.builtin.set_fact:
        bastion_ip: "{{ (terraform_outputs.stdout | from_json)['tn_bastion-ips'][site_networks_id.default | string] }}"

    - name: Add the bastion to Ansible Inventory
      ansible.builtin.add_host:
        hostname: "bastion"
        ansible_host: "{{ bastion_ip }}"
        ansible_user: "jenkins"

- name: "STAGE 2: Apply IaC to deploy the component - STEP 2"
  hosts: "bastion"
  gather_facts: false
  tasks:
    - name: Load enviromental variables from different sources inside the component
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/load_variables.yaml"

    - name: Enable routing path in Bastion
      ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/any/cac/enable_routing_bastion.yaml"

- name: "STAGE 3: Publish execution results"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Define RIS metadata dictionary
      ansible.builtin.set_fact:
        ris_metadata_dict: >-
          {
            'ris_ip_address': '{{ site_available_components.ris.ip }}',
            'ris_f0': '{{ ris_f0 }}',
            'ris_dist': '{{ ris_dist }}',
            'ris_phi_t': '{{ ris_phi_t }}',
            'ris_theta_t': '{{ ris_theta_t }}',
            'ris_num_phi_r': '{{ ris_num_phi_r }}',
            'ris_phi_r_low': '{{ ris_phi_r_low }}',
            'ris_phi_r_high': '{{ ris_phi_r_high }}',
            'ris_num_theta_r': '{{ ris_num_theta_r }}',
            'ris_theta_r_low': '{{ ris_theta_r_low }}',
            'ris_theta_r_high': '{{ ris_theta_r_high}}',
            'ris_reservation_time': '{{ ris_reservation_time }}
          }
    - name: Publish RIS metadata as terraform outputs"
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/custom_tf_outputs.yaml"
      vars:
        custom_outputs:
          - key: "{{ entity_name }}-metadata"
            value: "{{ ris_metadata_dict }}"

    - name: Publish execution results to TNLCM
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/publish_ok_results.yaml"
      vars:
        output:
          metadata_dict: "{{ ris_metadata_dict | b64encode }}"
