---
- name: Install some required apt packages
  become: true
  apt:
    name: 
      - net-tools
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

# TODO: Install mongosh?

- name: Install docker engine
  block:
    - ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/docker_install.yaml"
  become: true

- name: Configure GitHub Container Registry authentication
  block:
    - ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/docker_configuration.yaml"
  become: true

- name: Copy docker-compose file
  copy:
    src: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/docker-compose.yaml"
    dest: "/home/jenkins/docker-compose.yaml"
    owner: jenkins
    group: jenkins
    mode: '0644'

#- name: Copy config folder
#  synchronize:
#    src: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/config"
#    #src: ./config
#    dest: "/home/jenkins"
#    rsync_opts:
#    - "--chown=jenkins:jenkins"
#    mode: push
#    recursive: yes  # for copy subfolder too

- name: Copy static config folder recursively
  become: true
  ansible.builtin.copy:
    src: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/config/static/"
    dest: "/home/jenkins/config"
    owner: jenkins
    group: jenkins
    mode: '0644'
    #directory_mode: '0755'

- name: Apply templates to configuration files
  template:
    src: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/config/templates/{{ item.src }}"
    dst: "/home/jenkins/config/{{ item.dest }}"
    owner: jenkins
    group: jenkins
    mode: '0644'
  loop:
    - { src: 'controller-upf/config.yaml.j2', dest: 'controller-upf/config.yaml' }
    - { src: 'open5gs/amf.yaml.j2', dest: 'open5gs/amf.yaml' }
    - { src: 'open5gs/nssf.yaml.j2', dest: 'open5gs/nssf.yaml' }
    - { src: 'open5gs/smf.yaml.j2', dest: 'open5gs/smf.yaml' }
    - { src: 'stratum-upf/chassis_config.pb.txt.j2', dest: 'stratum-upf/chassis_config.pb.txt' }
  
#- name: Run docker-compose
#  become: true
#  become_user: jenkins
#  tasks:
#  - name: Run docker compose
#    community.docker.docker_compose:
#      project_src: /home/jenkins
#      files:
#        - docker-compose.yaml
#      state: present

- name: Execute docker-compose up
  become: true
  become_user: jenkins
  command: docker compose -f /home/jenkins/docker-compose.yaml up -d
  args:
    chdir: /home/jenkins