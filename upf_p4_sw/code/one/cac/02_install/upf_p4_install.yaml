---
- name: Install some required apt packages
  apt:
    name: 
      - net-tools
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - mongosh
    state: present
    update_cache: yes

- name: Install docker engine
  block:
    - ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/docker_install.yaml"
  become: true

- name: Configure GitHub Container Registry authentication
  block:
    - ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/docker_configuration.yaml"
  become: true

- name: Copy docker-compose file
  #become: true
  copy:
    src: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/docker-compose.yaml"
    #src: docker-compose.yaml
    dest: "/home/jenkins/docker-compose.yaml"
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: Copy config folder
  synchronize:
    src: "{{ workspace }}/{{ component_type }}/code/one/cac/02_install/config"
    #src: ./config
    dest: "/home/jenkins"
    rsync_opts:
    - "--chown=jenkins:jenkins"
    mode: push
    recursive: yes  # for copy subfolder too


- name: Modify UPF controller configuration in config.yaml
  ansible.builtin.replace:
    path: /home/jenkins/config/controller-upf/config.yaml
    regexp: '^(\s*{{ item.key }}\s*:\s*)".+"'
    replace: '\1"{{ one_upf_p4_sw_controller[item.value] }}"'
  loop:
    - { key: 'ENB_IPV4_N3', value: 'enb_ipv4_n3' }
    - { key: 'DN_IPV4_N6', value: 'dn_ipv4_n6' }
    - { key: 'UPF_IPV4_N3', value: 'upf_ipv4_n3' }
    - { key: 'UPF_IPV4_N6', value: 'upf_ipv4_n6' }
    - { key: 'ENB_MAC_N3', value: 'enb_mac_n3' }
    - { key: 'DN_MAC_N6', value: 'dn_mac_n6' }
    - { key: 'UPF_MAC_N3', value: 'upf_mac_n3' }
    - { key: 'UPF_MAC_N6', value: 'upf_mac_n6' }
    - { key: 'subnet_IPv4', value: 'one_upf_p4_sw_ue_pool' }


- name: Modify open5GS configuration
  ansible.builtin.replace:
    path: "{{ item.path }}"
    regexp: '^(\s+{{ item.key }}:\n\s+- addr:) .*'
    replace: '\1 {{ item.value }}'
  loop:
    - { path: '/home/jenkins/config/open5gs/amf.yaml', key: 'ngap', value: '{{ one_upf_p4_sw_open5gs_amf.ngap_addr }}' }
    - { path: '/home/jenkins/config/open5gs/smf.yaml', key: 'subnet', value: '{{ one_upf_p4_sw_ue_pool }}' }


- name: Modify chassis configuration
  ansible.builtin.replace:
    path: /home/jenkins/config/stratum-upf/chassis_config.pb.txt
    regexp: '(singleton_ports \{\n\s+id: {{ item.id }}\n\s+name: )"[^"]*"'
    replace: '\1 {{ one_upf_p4_sw_chassis_conf[item.key] }}'
  loop:
    - { id: 1, key: 'phy_n3' }
    - { id: 3, key: 'phy_n6' }

  
#- name: Run docker-compose
#  become: true
#  become_user: jenkins
#  tasks:
#  - name: Run docker compose
#    community.docker.docker_compose:
#      project_src: /home/jenkins
#      files:
#        - docker-compose.yaml
#      state: present

- name: Execute docker-compose up
  become: true
  become_user: jenkins
  command: docker compose -f /home/jenkins/docker-compose.yaml up -d
  args:
    chdir: /home/jenkins