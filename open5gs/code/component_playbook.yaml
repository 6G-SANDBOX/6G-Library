---
- name: "STAGE 1: Prepare to access a previous target component"
  hosts: localhost
  gather_facts: false
  connection: local  
  tasks:
    - name: Retrieve terraform outputs
      ansible.builtin.shell:
      args:
        chdir: "{{ workspace }}/.terraform/"
        cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
        executable: /bin/bash
      register: terraform_outputs
      changed_when: false

    - name: Set Terraform outputs as facts
      ansible.builtin.set_fact:
        bastion_ip: "{{ (terraform_outputs.stdout | from_json)['tn_bastion-ips']['0'] }}"
        node_ips: "{{ (terraform_outputs.stdout | from_json)[one_open5gs_k8s + '-node_ips'] }}"

    - name: Add the k8s master to Ansible Inventory
      ansible.builtin.add_host:
        hostname: "{{ one_open5gs_k8s }}-master_0"
        ansible_host: "{{ node_ips.master_0 }}"
        ansible_ssh_common_args: "-J {{ site_jenkins_user }}@{{ bastion_ip }},root@{{ node_ips.vnf_0 }}"
        ansible_user: "root"



- name: "STAGE 2: Apply IAC to deploy the component"
  hosts: "{{ hostvars['localhost']['one_open5gs_k8s'] }}-master_0"
  gather_facts: false
  tasks:
    - name: Load enviromental variables from different sources inside the component
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/common_tasks/load_variables.yaml"

    - name: Helm install
      ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/all/cac/helm_install.yaml"

- name: "STAGE 3: Publish execution results"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Publish execution results to TNLCM
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/common_tasks/publish_ok_results.yaml"

    - name: Upload markdown info to S3 storage
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/common_tasks/s3_upload.yaml"
      when: not terraform_apply.failed
