# {{ tn_id }}-tsn

The TSN (Time-Sensitive Networking) capability has been successfully addded to the Trial Network {{ tn_id }}
TSN architecture is shown below, in which 2 TSN endpoints are interconnected through a TSN bridge.

![TSN_TN](https://raw.githubusercontent.com/6G-SANDBOX/6G-Library/assets/images/TSN_TN.png)

### TSN configuration

The TSN configuration can be performed via SSH (cli) using a terminal or dashboard (gui) using a browser. Details on how to configure the different TSN features can be found in the [TSN configuration guide](#annex-a-relyum-tsn-bridge-cli-configuration). For example, the following command is used to configure the Time Aware Shaper (IEEE 802.1Qbv):

```bash
spt_config_reg -n 0 -w qbv_config_file.json
```

In this case, the specific parameters are defined in [qbv_config_file.json](#annex-b-qvb_config_filejson) and are applied only on port 0 of the device (indicated by -n 0). The following image shows the TSN configuration defined in [qbv_config_file.json](#annex-b-qvb_config_filejson).

![TAS_gui_example](https://raw.githubusercontent.com/6G-SANDBOX/6G-Library/assets/images/TAS_gui_example.jpg)

The TSN configuration can also be checked using the command:

```bash
spt_qbv_config -n 0 -r
```

Note that only the administrative values are shown. However, the operative values will be the same and are also shown in the command output:

```bash
-------------------------------------------------------------
Port ID: 0
Gate Enabled: 0

---------------------
Administrative values
---------------------
Gate States: 255
Control List Length: 6

	------------
	Control List
	------------

	Index: 0
	Operation Name: set-gate-states
	Gate States Value: 32
	Time Interval Value: 10000000

	Index: 1
	Operation Name: set-gate-states
	Gate States Value: 1
	Time Interval Value: 10000000

	Index: 2
	Operation Name: set-gate-states
	Gate States Value: 8
	Time Interval Value: 10000000

	Index: 3
	Operation Name: set-gate-states
	Gate States Value: 4
	Time Interval Value: 10000000

	Index: 4
	Operation Name: set-gate-states
	Gate States Value: 128
	Time Interval Value: 10000000

	Index: 5
	Operation Name: set-gate-states
	Gate States Value: 82
	Time Interval Value: 10000000

Cycle Time Numerator: 60000000
Cycle Time Denominator: 1000000000
Cycle Time Extension: 1000
Base Time Seconds: 0
Base Time Nanoseconds: 0
---------------------
```

#### Login Credentials

Information required to access the TSN components of the trial network.

| Device | IP address | User | Password | Connection |
| ------ | ------ | ------ | ------ | ------ |
| TSN endpoint control | 10.11.32.55 | tsncontrol | tsn | SSH |
| TSN endpoint 1 | 192.168.2.100 | relyum | relyum | SSH |
| TSN endpoint 1 | 192.168.2.100 | admin | relyum | Dashboard |
| TSN endpoint 2 | 192.168.2.200 | relyum | relyum | SSH |
| TSN endpoint 2 | 192.168.2.200 | admin | relyum | Dashboard |
| TSN bridge | 192.168.2.10 | relyum | relyum | SSH |
| TSN bridge | 192.168.2.10 | relyum | admin | Dashboard |


### ANNEX A: Relyum TSN bridge CLI configuration

**1. CLI configuration tool** 

1.1 Design functionalities

These are the listed functionalities by default in the -TSN-PCIe : 

- reg: shows the raw registers map (32-bit values). 
- core info: shows version information and HW/SW licensed features. 
- ptp: allows to configure the PTP functionality of the IP core. 
- switching: shows configuration _elds related to switching parameters. 
- rstp: shows configuration _elds for rstp protocol. 
- mac query: shows the learned MAC addresses. 
- tsn: allows to configure the TSN parameters of the device. 
- port config: shows configuration _elds particular to each Ethernet port and non 
- related to other functionalities. 
- stats: shows the traffic statistics of each Ethernet port. 
- serv: allows controlling the services available in the device. 

Examples: 

- switching 
  - mes_core_version                                       (reg: 0x00000500 width: 32 offset: 0) 
  - mes_switching_mask_control                             (reg: 0x00000504 width: 32 offset: 0) 
  - mes_switching_mask                                     (reg: 0x00000508 width: 32 offset: 0) 
  - mes_learning_enable                                    (reg: 0x00000600 width: 1 offset: 0) 
  - mes_ageing_enable                                      (reg: 0x00000604 width: 1 offset: 0) 
  - mes_ageing_time                                        (reg: 0x00000608 width: 20 offset: 0) 
  - mes_clear_dynamic_mac_entries                          (reg: 0x0000060C width: 1 offset: 0) 
  - mes_clear_static_mac_entries                           (reg: 0x0000060C width: 1 offset: 1) 
  - mes_clear_complete_mac_entries                         (reg: 0x0000060C width: 1 offset: 2) 
  - mes_clear_vlan_id_mac_entries                          (reg: 0x0000060C width: 1 offset: 3) 
  - mes_clear_vlan_id_entry                                (reg: 0x0000060C width: 12 offset: 30) 
  - mes_static_mac_address_control                         (reg: 0x00000610 width: 32 offset: 0) 
  - mes_static_mac_address_lo                              (reg: 0x00000614 width: 32 offset: 0) 
  - mes_static_mac_address_hi_vlan_id                      (reg: 0x00000618 width: 32 offset: 0) 
  - mes_static_mac_address_source_ports                    (reg: 0x0000061C width: 32 offset: 0) 
  - mes_global_port_based_vlan_control                     (reg: 0x00000700 width: 1 offset: 0) 
  - mes_global_reset_vlan_configuration                    (reg: 0x00000704 width: 1 offset: 0) 
  - mes_global_allowed_vlan                                (reg: 0x00000708 width: 12 offset: 0) 
  - mes_ethertype_custom_s_port                            (reg: 0x0000070C width: 16 offset: 0) 
  - mes_vlan_port_id                                       (reg: 0x00000710 width: 8 offset: 0) 
  - mes_vlan_port_mode                                     (reg: 0x00000714 width: 2 offset: 0) 
  - mes_vlan_port_type                                     (reg: 0x00000718 width: 2 offset: 0) 
  - mes_port_vlan                                          (reg: 0x0000071C width: 16 offset: 0) 
  - mes_vlan_ingress_filtering                             (reg: 0x00000720 width: 1 offset: 0) 
  - mes_vlan_ingress_acceptance                            (reg: 0x00000724 width: 2 offset: 0) 
  - mes_port_vlan_egress_tagging                           (reg: 0x00000728 width: 2 offset: 0) 
  - mes_port_vlan_priority_tagged_egress_tagging           (reg: 0x00000728 width: 2 offset: 4) 
  - mes_vlan_id_configuration                              (reg: 0x0000072C width: 12 offset: 0) 
  - mes_vlan_id_member_configuration                       (reg: 0x00000730 width: 1 offset: 0) 
  - mes_vlan_id_member_ports_0                             (reg: 0x00000734 width: 32 offset: 0) 
  - mes_custom_vlan_untag_configuration                    (reg: 0x0000073C width: 1 offset: 0) 
  - mes_custom_vlan_untag_mask_0                           (reg: 0x00000740 width: 32 offset: 0) 
  - preemption_port_id                                     (reg: 0x00001100 width: 8 offset: 0) 
  - preemption_support                                     (reg: 0x00001104 width: 1 offset: 0) 
  - preemption_enable                                      (reg: 0x00001108 width: 1 offset: 0) 
  - preemption_hold_release_enable                         (reg: 0x0000110C width: 1 offset: 0) 
  - preemption_priority_queues                             (reg: 0x00001110 width: 32 offset: 0) 
  - host_access_control_enable                             (reg: 0x00001200 width: 1 offset: 0) 
  - host_access_control_write                              (reg: 0x00001204 width: 1 offset: 0) 
  - host_access_control_clear                              (reg: 0x00001204 width: 1 offset: 1) 
  - host_access_control_index                              (reg: 0x00001208 width: 4 offset: 0) 
  - host_access_control_mac_addr_lo                        (reg: 0x0000120C width: 32 offset: 0) 
  - host_access_control_mac_addr_hi                        (reg: 0x00001210 width: 16 offset: 0) 
  - host_access_control_ethertype                          (reg: 0x00001214 width: 16 offset: 0) 
  - host_access_control_mask                               (reg: 0x00001218 width: 2 offset: 0) 
- tsn 
  - tsn_qbv_port_id                                        (reg: 0x00002000 width: 8 offset: 0) 
  - tsn_qbv_gate_enabled                                   (reg: 0x00002004 width: 1 offset: 0) 
  - tsn_qbv_admin_gate_states                              (reg: 0x00002008 width: 8 offset: 0) 
  - tsn_qbv_oper_gate_states                               (reg: 0x0000200C width: 8 offset: 0) 
  - tsn_qbv_admin_control_list_length                      (reg: 0x00002010 width: 32 offset: 0) 
  - tsn_qbv_oper_control_list_length                       (reg: 0x00002014 width: 32 offset: 0) 
  - tsn_qbv_admin_list_pointer                             (reg: 0x00002018 width: 32 offset: 0) 
  - tsn_qbv_admin_gate_state_values                        (reg: 0x0000201C width: 10 offset: 0) 
  - tsn_qbv_admin_time_interval                            (reg: 0x00002020 width: 32 offset: 0) 
  - tsn_qbv_oper_list_pointer                              (reg: 0x00002024 width: 32 offset: 0) 
  - tsn_qbv_oper_gate_state_values                         (reg: 0x00002028 width: 10 offset: 0) 
  - tsn_qbv_oper_time_interval                             (reg: 0x0000202C width: 32 offset: 0) 
  - tsn_qbv_admin_cycle_time                               (reg: 0x00002030 width: 32 offset: 0) 
  - tsn_qbv_oper_cycle_time                                (reg: 0x00002034 width: 32 offset: 0) 
  - tsn_qbv_admin_cycle_time_extension                     (reg: 0x00002038 width: 32 offset: 0) 
  - tsn_qbv_oper_cycle_time_extension                      (reg: 0x0000203C width: 32 offset: 0) 
  - tsn_qbv_admin_base_time_seconds_31_0                   (reg: 0x00002044 width: 32 offset: 0) 
  - tsn_qbv_admin_base_time_nanoseconds                    (reg: 0x00002048 width: 32 offset: 0) 
  - tsn_qbv_oper_base_time_seconds_31_0                    (reg: 0x00002050 width: 32 offset: 0) 
  - tsn_qbv_oper_base_time_nanoseconds                     (reg: 0x00002054 width: 32 offset: 0) 
  - tsn_qbv_configuration_change_request                   (reg: 0x00002058 width: 32 offset: 0) 
  - tsn_qbv_configuration_change                           (reg: 0x0000205C width: 1 offset: 0) 
  - tsn_qbv_configuration_change_time_seconds_31_0         (reg: 0x00002064 width: 32 offset: 0) 
  - tsn_qbv_configuration_change_time_nanoseconds          (reg: 0x00002068 width: 32 offset: 0) 
  - tsn_qbv_configuration_apply_request                    (reg: 0x0000206C width: 32 offset: 0) 
  - tsn_qbv_configuration_apply                            (reg: 0x00002070 width: 1 offset: 0) 
  - tsn_qbv_configuration_apply_time_seconds_31_0          (reg: 0x00002078 width: 32 offset: 0) 
  - tsn_qbv_configuration_apply_time_nanoseconds           (reg: 0x0000207C width: 32 offset: 0) 
  - tsn_qbv_configuration_pending                          (reg: 0x00002080 width: 1 offset: 0) 
  - tsn_qbv_supported_list_max                             (reg: 0x00002084 width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_0                   (reg: 0x00002088 width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_1                   (reg: 0x0000208C width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_2                   (reg: 0x00002090 width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_3                   (reg: 0x00002094 width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_4                   (reg: 0x00002098 width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_5                   (reg: 0x0000209C width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_6                   (reg: 0x000020A0 width: 32 offset: 0) 
  - tsn_qbv_queuemaxsdu_priority_queue_7                   (reg: 0x000020A4 width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_0                   (reg: 0x000020A8 width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_1                   (reg: 0x000020AC width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_2                   (reg: 0x000020B0 width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_3                   (reg: 0x000020B4 width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_4                   (reg: 0x000020B8 width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_5                   (reg: 0x000020BC width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_6                   (reg: 0x000020C0 width: 32 offset: 0) 
  - tsn_qbv_transmission_overrun_queue_7                   (reg: 0x000020C4 width: 32 offset: 0) 
  - tsn_qbv_tx_logic_latency_1000Mbps                      (reg: 0x000020C8 width: 32 offset: 0) 
  - tsn_qbv_tx_logic_latency_100Mbps                       (reg: 0x000020CC width: 32 offset: 0) 
  - tsn_qbv_tx_logic_latency_10Mbps                        (reg: 0x000020D0 width: 32 offset: 0) 
  - tsn_allowed_gates                                      (reg: 0x000020D4 width: 8 offset: 0) 
  - tsn_configuration_change_past                          (reg: 0x000020D8 width: 32 offset: 0) 
  - tsn_cbs_port_id                                        (reg: 0x00002100 width: 8 offset: 0) 
  - tsn_cbs_priority_buffer                                (reg: 0x00002104 width: 3 offset: 0) 
  - tsn_cbs_enable                                         (reg: 0x00002108 width: 1 offset: 0) 
  - tsn_cbs_queue_idle_slope                               (reg: 0x0000210C width: 16 offset: 0) 
  - tsn_stream_identification_write                        (reg: 0x00002200 width: 1 offset: 0) 
  - tsn_stream_identification_read                         (reg: 0x00002200 width: 1 offset: 1) 
  - tsn_stream_identification_clear_stream                 (reg: 0x00002200 width: 1 offset: 2) 
  - tsn_stream_identification_clear_all_streams            (reg: 0x00002200 width: 1 offset: 3) 
  - tsn_stream_identification_use_priority                 (reg: 0x00002200 width: 1 offset: 8) 
  - tsn_stream_id_mac_lo                                   (reg: 0x00002204 width: 32 offset: 0) 
  - tsn_stream_id_mac_hi                                   (reg: 0x00002208 width: 16 offset: 0) 
  - tsn_stream_id_vlan                                     (reg: 0x0000220C width: 32 offset: 0) 
  - tsn_stream_handle                                      (reg: 0x00002210 width: 32 offset: 0) 
  - tsn_stream_param_control                               (reg: 0x00002300 width: 32 offset: 0) 
  - tsn_stream_param_stream_handle                         (reg: 0x00002304 width: 32 offset: 0) 
  - tsn_max_frame_size                                     (reg: 0x00002330 width: 32 offset: 0) 
  - tsn_ipv                                                (reg: 0x00002334 width: 32 offset: 0) 
  - tsn_meter_id                                           (reg: 0x0000233C width: 32 offset: 0) 
  - tsn_metering_mode                                      (reg: 0x00002340 width: 5 offset: 0) 
  - tsn_cir                                                (reg: 0x00002344 width: 32 offset: 0) 
  - tsn_eir                                                (reg: 0x00002348 width: 32 offset: 0) 
  - tsn_cbs                                                (reg: 0x0000234C width: 32 offset: 0) 
  - tsn_ebs                                                (reg: 0x00002350 width: 32 offset: 0) 
  - tsn_qci_port                                           (reg: 0x00002400 width: 8 offset: 0) 
  - tsn_psfp_en                                            (reg: 0x00002404 width: 1 offset: 0) 
  - tsn_cb_proxy_port                                      (reg: 0x00002500 width: 32 offset: 0) 
  - tsn_cb_stream_handler_reset                            (reg: 0x00002508 width: 32 offset: 0) 
  - tsn_cb_recovery_reset                                  (reg: 0x0000250C width: 1 offset: 0) 
  - tsn_cb_recovery_enable                                 (reg: 0x00002510 width: 1 offset: 0) 
  - tsn_cb_recovery_mode                                   (reg: 0x00002514 width: 1 offset: 0) 
  - tsn_cb_recovery_history                                (reg: 0x00002518 width: 4 offset: 0) 
  - tsn_cb_recovery_reset_time                             (reg: 0x0000251C width: 32 offset: 0) 
  - tsn_cb_recovery_rx_take_no_sequence                    (reg: 0x00002520 width: 1 offset: 0) 
  - tsn_cb_recovery_tx_take_no_sequence                    (reg: 0x00002520 width: 1 offset: 1) 
  - tsn_active_stream_translation_control                  (reg: 0x00002600 width: 32 offset: 0) 
  - tsn_active_stream_translation_port_id                  (reg: 0x00002604 width: 8 offset: 0) 
  - tsn_active_stream_translation_stream_handle            (reg: 0x00002608 width: 32 offset: 0) 
  - tsn_active_stream_translation_mac_lo                   (reg: 0x0000260C width: 32 offset: 0) 
  - tsn_active_stream_translation_mac_hi                   (reg: 0x00002610 width: 16 offset: 0) 
  - tsn_active_stream_translation_vlan                     (reg: 0x00002614 width: 32 offset: 0) 
- port_config 
  - half_duplex                                            (reg: 0x00000018 width: 1 offset: 0) 
  - enable_port                                            (reg: 0x00000068 width: 1 offset: 0) 
- stats (available on each PORT) 
  - phy_speed                                              (reg: 0x0000001C width: 2 offset: 0) 
  - rx_frames                                              (reg: 0x00000020 width: 32 offset: 0) 
  - tx_frames                                              (reg: 0x00000024 width: 32 offset: 0) 
  - crc_err_frames                                         (reg: 0x00000028 width: 32 offset: 0) 
  - lanid_err_frames                                       (reg: 0x0000002C width: 32 offset: 0) 
  - reset_all_cnt                                          (reg: 0x0000003C width: 1 offset: 0) 
  - en_stat_count                                          (reg: 0x00000040 width: 1 offset: 0) 
  - rx_drop_overflow_frame                                 (reg: 0x00000044 width: 32 offset: 0) 
  - rx_unicast_frame                                       (reg: 0x00000048 width: 32 offset: 0) 
  - rx_multicast_frame                                     (reg: 0x0000004C width: 32 offset: 0) 
  - rx_broadcast_frame                                     (reg: 0x00000050 width: 32 offset: 0) 
  - rx_vlan_tag_frame                                      (reg: 0x00000054 width: 32 offset: 0) 
  - rx_ptp_frame                                           (reg: 0x00000058 width: 32 offset: 0) 
  - rx_overlength_frame                                    (reg: 0x0000005C width: 32 offset: 0) 
  - rx_underlength_frame                                   (reg: 0x00000060 width: 32 offset: 0) 
  - rx_data_bytes                                          (reg: 0x00000064 width: 32 offset: 0) 
  - vlan_id_stat                                           (reg: 0x0000006C width: 12 offset: 0) 
  - vlan_stat_en                                           (reg: 0x0000006C width: 1 offset: 12) 
  - tx_drop_overflow_frame                                 (reg: 0x00000070 width: 32 offset: 0) 
  - tx_unicast_frame                                       (reg: 0x00000074 width: 32 offset: 0) 
  - tx_multicast_frame                                     (reg: 0x00000078 width: 32 offset: 0) 
  - tx_broadcast_frame                                     (reg: 0x0000007C width: 32 offset: 0) 
  - tx_vlan_tag_frame                                      (reg: 0x00000080 width: 32 offset: 0) 
  - tx_ptp_frame                                           (reg: 0x00000084 width: 32 offset: 0) 
  - tx_data_bytes                                          (reg: 0x00000088 width: 32 offset: 0) 
  - rx_preemption_start_frame                              (reg: 0x000000C0 width: 32 offset: 0) 
  - rx_preemption_continue_frame                           (reg: 0x000000C4 width: 32 offset: 0) 
  - rx_preemption_bad_sequence_continue_frame              (reg: 0x000000C8 width: 32 offset: 0) 
  - rx_preemption_crc_error_frame                          (reg: 0x000000CC width: 32 offset: 0) 
  - tx_preemption_start_frame                              (reg: 0x000000D0 width: 32 offset: 0) 
  - tx_preemption_continue_frame                           (reg: 0x000000D4 width: 32 offset: 0) 

1.2. Read operations

```bash
$ spt_config_reg -f CORE:field_name -r

#### Example: 

$ spt_config_reg -f INTERNAL_PORT:tx_frames -r Read value: 42465 (HEX: 0x0000A5E1) 
```

1.3. Write operations

```bash
$ spt_config_reg -f CORE:field_name -w value

#### Example:

$ spt_config_reg -f SWITCH:tsn_cbs -w 1 Operation successful
```

**2. QBV config** 

2.1.  Read current QBV config

```bash
$ spt_qbv_config -r

Operation completed 

Status code: SUCCESS 

------------------------------------------------------------- 
Port ID: 0 
Gate Enabled: 0 

--------------------- 
Administrative values 
--------------------- 

Gate States: 255 
Control List Length: 2 

------------ 
Control List 
------------ 

  Index: 0 

  Operation Name: set-gate-states 
  Gate States Value: 240 
  Time Interval Value: 50000 

  Index: 1 

  Operation Name: set-gate-states Gate 
  States Value: 15 
  Time Interval Value: 50000 

Cycle Time Numerator: 1 
Cycle Time Denominator: 1000 
Cycle Time Extension: 1000 
Base Time Seconds: 0 

Base Time Nanoseconds: 0 
--------------------- 

--------------------- 
Operative values 
--------------------- 

Gate States: 255 
Control List Length: 0 

------------ 
Control List
------------ 

Cycle Time Numerator: 4294967295 
Cycle Time Denominator: 1000000000 
Cycle Time Extension: 4294967295 
Base Time Seconds: 0 
Base Time Nanoseconds: 0 

--------------------- 

Config Change: 0 
Config Change Time Seconds: 0 
Config Change Time Nanoseconds: 0 Tick Granularity: 9 
Current Time Seconds: 3022709 Current Time Nanoseconds: 923154673 Config Pending: 0 
Config Change Error: 0 
Suported List Max: 256 

```
    
2.2. Write QBV config

```bash
$ spt_qbv_config -w qbv_config_file_test.json
```

**qbv_config_file_test.json**

```json
{
   "qbv_gate_parameters":{
      "gate_enabled":false,
      "admin":{
         "gate_states":255,
         "control_list_length":2,
         "control_list":[
            {
               "index":0,
               "operation_name":"set-gate-states",
               "gate_states_value":240,
               "time_interval_value":50000
            },
            {
               "index":1,
               "operation_name":"set-gate-states",
               "gate_states_value":15,
               "time_interval_value":50000
            }
         ],
         "cycle_time":{
            "numerator":1,
            "denominator":1000
         },
         "cycle_time_extension":1000,
         "base_time":{
            "seconds":0,
            "nanoseconds":0
         }
      },
      "config\_change":false
   }
}
```

**3. QAV config** 

3.1. Read current QAV config

```bash
$ spt_qav_config -r

------------------------------------------------------------- 

Priority queue: 0 

Idle slope: 100 

CBS enable: 0 
-------------------------------------------------------------
```

  3.2.  Write QAV config

```bash
$ spt_qav_config -w qav_config_file_test.json 
```

**qav_config_file_test.json**

```json
{
  "cbs_params" : {
    "cbs_enable": false,
    "idle_slope": 100
  }
}
```

### ANNEX B: qvb_config_file.json

```json
{
    "qbv_gate_parameters": {
        "gate_enabled": true,
        "admin": {
            "gate_states": 255,
            "control_list_length": 6,
            "control_list": [
                {
                    "index": 0,
                    "operation_name": "set-gate-states",
                    "gate_states_value": 32,
                    "time_interval_value": 10000000
                },
                {
                    "index": 1,
                    "operation_name": "set-gate-states",
                    "gate_states_value": 1,
                    "time_interval_value": 10000000
                },
                {
                    "index": 2,
                    "operation_name": "set-gate-states",
                    "gate_states_value": 8,
                    "time_interval_value": 10000000
                },
                {
                    "index": 3,
                    "operation_name": "set-gate-states",
                    "gate_states_value": 4,
                    "time_interval_value": 10000000
                },
                {
                    "index": 4,
                    "operation_name": "set-gate-states",
                    "gate_states_value": 128,
                    "time_interval_value": 10000000
                },
                {
                    "index": 5,
                    "operation_name": "set-gate-states",
                    "gate_states_value": 82,
                    "time_interval_value": 10000000
                }
            ],
            "cycle_time": {
                "numerator": 60000000,
                "denominator": 1000000000
            },
            "cycle_time_extension": 1000,
            "base_time": {
                "seconds": 0,
                "nanoseconds": 0
            }
        },
        "config_change": true
    }
}
```