######################################################
##
## Component public variables
##
## Diverse information read by the TNLCM
## to adapt its behaviour depending on the component.
##
######################################################


####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Joaquín Pérez Otero <joaquin.perez_otero.ext@nokia.com>
  short_description: Deploys a Virtual Machine with Python modules installed to consume XR extensions of NaC REST API. 
  long_description: |
    A Virtual Machine based on Ubuntu 22.04 LTS.
    Size: 2 GiB of memory, 1 vCPU and 20GiB of storage
    Python 3 + pip
    Python packages 'nac_api' and 'xrext' installed

    NOTE: XRext image ONE PARAMS may be included as input variables, but at the moment the 
          image is only intended to be used in [uma] site, so the PARAMS are not included to avoid 
          confusing the experimenter.
  hypervisors: ["one"]
  appliances: ["https://marketplace.mobilesandbox.cloud:9443/appliance/service_XRext"]
  depends_on:
    mandatory:
    any_of:
      - tn_vxlan
      - vnet

####################################
## Site-specific variables
####################################
site_variables:
  template_id: ID of the XRext VM template to use in your OpenNebula environment
  image_id: ID of the XRext VM image to use in your OpenNebula environment


####################################
## Input variables
####################################
input:
  one_xrext_networks:
    description: Ordered list of Virtual Network names the VM will be part of. The first Virtual Network is used by Jenkins to reach and configure the VM, so most cases will be fine using always the tn_vxlan
    type: "list[tn_vxlan or vnet]"
    default_value: ["tn_vxlan"]
    required_when: false


####################################
## Generated terraform outputs
####################################
terraform_outputs:
  __entity_name__id: "VM ID in OpenNebula. Generated from Terraform Manifest"
  __entity_name__ips: "Dictionary of VM IP addresses: {<VNet ID in OpenNebula>: <IP address>}. Generated from Terraform Manifest"
