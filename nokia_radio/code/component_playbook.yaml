---
- name: "STAGE 1: Prepare to access a previous target component"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Load enviromental variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/load_variables.yaml"

    - name: Prepare terraform working directory
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/terraform_workdir.yaml"

    - name: Retrieve terraform outputs
      ansible.builtin.shell:
      args:
        chdir: "{{ workspace }}/.terraform/"
        cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
        executable: /bin/bash
      register: terraform_outputs
      changed_when: false

    - name: Set Terraform outputs as playbook facts
      ansible.builtin.set_fact:
        bastion_ip: "{{ (terraform_outputs.stdout | from_json)['tn_bastion-ips'][site_networks_id.default | string] }}"
        node_ips: "{{ (terraform_outputs.stdout | from_json)[nokia_radio_one_oneKE + '-node_ips'] }}"

    # - name: Add Route Manager to Ansible Inventory
    #   ansible.builtin.add_host:
    #     hostname: "routemanager"
    #     ansible_host: "{{ site_available_components.nokia_radio.route_manager_ip1 }}"
    #     ansible_user: "root"
    #     ansible_ssh_private_key_file: "/var/lib/jenkins/.ssh/id_ed25519"           # TODO: Borrar auth key del routemanager

    - name: Get current time and date with RFC 3339 section 5.6 format
      ansible.builtin.command: "date -u +'%Y-%m-%dT%H:%M:%SZ'"
      register: start_time
      changed_when: false

    - name: Get end of lease time and date with RFC 3339 section 5.6 format         # TODO: Usar estos tiempos
      ansible.builtin.shell: |
        date -u -d "{{ start_time.stdout }} + {{ nokia_radio_any_duration }} seconds" +'%Y-%m-%dT%H:%M:%SZ'
      register: stop_time
      changed_when: false

    - name: Enable routing path in Route Manager
      # ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/any/cac/enable_routing_manager.yaml"
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/routemanager_add.yaml"
      vars:
        endpoint: "{{ site_available_components.site_routemanager.endpoint }}"
      loop:
        - { destination: "{{ site_available_components.nokia_radio.core_network }}", gateway: "{{ basion_ip }}" }

    - name: Enable routing path in Bastion
      # ansible.builtin.include_tasks: "{{ workspace }}/{{ component_type }}/code/any/cac/enable_routing_bastion.yaml"
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/routemanager_add.yaml"
      vars:
        endpoint: "{{ bastion_ip }}"
      loop:
        - { destination: "{{ site_available_components.nokia_radio.core_network }}", gateway: "{{ hostvars['localhost']['node_ips'].vnf_0 }}" }
        - { destination: "{{ site_available_components.nokia_radio.cp_ip }}", gateway: "{{ site_available_components.nokia_radio.route_manager_ip1 }}" }
        - { destination: "{{ site_available_components.nokia_radio.up_ip }}", gateway: "{{ site_available_components.nokia_radio.route_manager_ip1 }}" }



- name: "STAGE 3: Publish execution results"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Define Nokia metadata dictionary
      ansible.builtin.set_fact:
        nokia_metadata_dict: >-
          {
            'reservation_time': '{{ nokia_radio_one_reservation_time }}',
            'oneKE': '{{ nokia_radio_one_oneKE }}',
            'cp_ip': '{{ site_available_components.nokia_radio.cp_ip }}'
            'core_network': '{{ site_available_components.nokia_radio.core_network }}',
            'route_manager_ip1': '{{ site_available_components.nokia_radio.route_manager_ip1 }}',
            'mcc': '{{ site_available_components.nokia_radio.mcc }}',
            'mnc': '{{ site_available_components.nokia_radio.mnc }}',
            'tac': '{{ site_available_components.nokia_radio.tac }}',
            's_nssai_sst': '{{ site_available_components.nokia_radio.s_nssai_sst }}',
            's_nssai_sd': '{{ site_available_components.nokia_radio.s_nssai_sd }}',
            'amf_ip': '{{ site_available_components.nokia_radio.amf_ip }}',
            'upf_ip': '{{ site_available_components.nokia_radio.upf_ip }}'
          }
    - name: Publish Nokia metadata as terraform outputs"
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/custom_tf_outputs.yaml"
      vars:
        custom_outputs:
          - key: "{{ entity_name }}-metadata"
            value: "{{ nokia_metadata_dict }}"

    - name: Publish execution results to TNLCM and S3 object storage
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/publish_ok_results.yaml"
      vars:
        output:
          metadata_dict: "{{ nokia_metadata_dict | b64encode }}"
