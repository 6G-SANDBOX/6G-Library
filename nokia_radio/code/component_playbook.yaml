---
- name: "STAGE 1: Set new routes in route-manager-api and tn_bastion"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Load enviromental variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/load_variables.yaml"

    - name: Prepare terraform working directory
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/terraform_workdir.yaml"

    - name: Retrieve terraform outputs
      ansible.builtin.shell:
      args:
        chdir: "{{ workspace }}/.terraform/"
        cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
        executable: /bin/bash
      register: terraform_outputs
      changed_when: false

    - name: Set Terraform outputs as playbook facts
      ansible.builtin.set_fact:
        bastion_ip: "{{ (terraform_outputs.stdout | from_json)['tn_bastion-ips'][site_networks_id.default | string] }}"
        proxy: "{{ (terraform_outputs.stdout | from_json)[nokia_radio_one_open5gs + '-metadata']['proxy'] }}"
        amf_ip: "{{ (terraform_outputs.stdout | from_json)[nokia_radio_one_open5gs + '-metadata']['amf_ip'] }}"
        upf_ip: "{{ (terraform_outputs.stdout | from_json)[nokia_radio_one_open5gs + '-metadata']['upf_ip'] }}"

    - name: Get current time and date with RFC 3339 section 5.6 format
      ansible.builtin.command: "date -u +'%Y-%m-%dT%H:%M:%SZ'"
      register: start_time
      changed_when: false

    - name: Get end of lease time and date with RFC 3339 section 5.6 format
      ansible.builtin.shell: |
        date -u -d "{{ start_time.stdout }} + {{ nokia_radio_any_duration }} seconds" +'%Y-%m-%dT%H:%M:%SZ'
      register: stop_time
      changed_when: false

    - name: Submit routes in route-manager-api from the Nokia Airscale to the 5G Core
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/routemanager_add.yaml"
      vars:
        endpoint: "{{ site_routemanager.endpoint }}"
      loop:
        - { destination: "{{ amf_ip }}", gateway: "{{ bastion_ip }}" }
        - { destination: "{{ upf_ip }}", gateway: "{{ bastion_ip }}" }

    - name: Submit routes in tn_bastion from the Trial Network to the Nokia Airscale
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/routemanager_add.yaml"
      vars:
        endpoint: "{{ bastion_ip }}"
      loop:
        - { destination: "{{ site_available_components.nokia_radio.cp_ip }}", gateway: "{{ site_routemanager.endpoint }}" }
        - { destination: "{{ site_available_components.nokia_radio.up_ip }}", gateway: "{{ site_routemanager.endpoint }}" }

    - name: If required, submit routes in tn_bastion for proxy access to the 5G Core
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/routemanager_add.yaml"
      vars:
        endpoint: "{{ bastion_ip }}"
      loop:
        - { destination: "{{ amf_ip }}", gateway: "{{ proxy }}" }
        - { destination: "{{ upf_ip }}", gateway: "{{ proxy }}" }
      when: proxy is defined and proxy != ''


- name: "STAGE 3: Publish execution results"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Set custom terraform outputs for future components
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/custom_tf_outputs.yaml"
      vars:
        custom_outputs:
          - key: "{{ entity_name }}-metadata"
            value: "{{ nokia_metadata_dict }}"

    - name: Publish execution results to TNLCM and S3 object storage
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/publish_ok_results.yaml"
      vars:
        output:
          metadata_dict: "{{ nokia_metadata_dict | b64encode }}"
