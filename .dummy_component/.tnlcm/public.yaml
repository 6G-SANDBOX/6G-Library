######################################################
##
## Component public variables
##
## Diverse information read by the TNLCM
## to adapt its behaviour depending on the component.
##
######################################################


############################################################################################################
## Component metadata
#  Gives the TNLCM some general information about the component.
############################################################################################################
metadata:
  # Unordered list of active component mantainers
  maintainers:
    - Full Name <contact@mail.address>    
  # One-sentence-long description.
  short_description: Short description of a Component Type
  # Description that can span multiple lines.
  long_description: |
    The long description of a Component Type may span multiple lines
    and provide a more in depth outline of it's purpose.
    This sample component needs a previous "X" component to be previously deployed, and referrenced in input: "sampleVariable"
    This sample component uses a custom appliance previously installed in your site (Instructions on how to install the component should be in the README.md file)
  # Unordered list of compatible virtualization platforms for the component. Currently only OpenNebula (one) is available
  hypervisors: [one]
  # (OPTIONAL, currently unused) true in special components that include an additional playbook with the required steps to undeplo it. You probably don't need it
  #destroy_script: false    
  # (OPTIONAL, currently unused) true in certain components that require the TNLCM to perform an accounting on how many instances of this component are deployed in a site, and for how long. Quantity and duration are instructed inside the sites repository
  #resource_manager: false
  # Optional. Marketplace link to the appliance VM template/image used by this component. Appliance should be already downloaded and documented in "site_variables" to be able to use this component.
  #appliance: <link>        


############################################################################################################
## Site-specific variables
#  Variables read from your site's encripted file in the 6G-Sandbox-Sites repository.
#  TNLCM checks that the variables are defined, and errors if attempting to deploy the component without them
#  Each variable has a short description of what it does for informational purposes
############################################################################################################
site_variables:
  template_id: Short description of what this variable represents.


############################################################################################################
## Input variables
#  Describes the variables shown in the TNLCM to be filled by the experimenter and included in a TN descriptor. 
#  Most variables just serve to overwrite a private/default value, but others (mainly mandatory ones) serve to define dependencies between previoiusly deployed componentes.
#  Each variable can contain the following fields:
#    - description; A general description of the variable shown in the TNLCM Frontend. null by default
#    - type: Expected python built-in data type https://www.w3schools.com/python/python_datatypes.asp, but it can also be a component name. "str" by default
#    - default_value: In optional variables, the value existing in privates.yaml that the variable can overwrite. null by default.
#                     Text here only has documentational value, if your default variable has complex logic you can just add a description (like in the tn_bastion) 
#    - choices: List of possible input values. [] by default
#    - required_when: Condition to satisfy to make the variable mandatory to fill by the experimenter. Values can be a simple true/false, or a boolean condition https://www.w3schools.com/python/python_booleans.asp
#                     Conditions can include the value of other input variables of the same comopnent. false by default
############################################################################################################
input:
  dummy_one_simpletextvariable:
    description: Description of an optional text variable. Variable for OpenNebula sites
    #type: str
    default_value: "Default string"
    #choices: []
    required_when: false

  dummy_one_mandatorylistofstrings:
    description: |
      Variable has not default and requires a list of mandatory_list_of_strings
      A sample valid input would be ["one", "two", "three"]
      Variable only for OpenNebula sites
    type: list[str]
    #default_value: null
    #choices: []
    required_when: true

  dummy_any_chooseanumber:
    description: Select a numeric value from the list of choices. First choice by default. Variable for any kind of site
    type: int
    default_value: 1
    choices: [1,2,3]
    required_when: false

  dummy_any_samplechoicevariable:
    description: |
      Mandatory variable taht stablishes a dependency with another component.
      Through the previous component output, other variables from this component can be autocompleted 
      Variable for any kind of site
    type: vnet
    #default_value: null
    #choices: []
    required_when: true

  dummy_vmware_autocompletedvariable:
    description: |
      The value will be overwritten in this order:
        1. Initial value is in the private.yaml file (a.k.a. the value shown in default_value)
        2. If another component was referrenced in "sample_choice_variable" a playbook step will overwrite the value with one of its output variables.
        3. If this optional variable is filled, the final value will always be this one.
      Most cases will be OK simply leaving the default_value for it to be automatically overwritten
      Variable for VMWare sites
    type: "strlist"
    default_value: ["255.255.255.0"]
    #choices: []
    required_when: true


############################################################################################################
## Generated terraform outputs
#  Unknown before the deployment, they are stored in the S3 Object Storage, and available to use by future components
#  Each variable has a short description of what it does for informational purposes
#   __entity_name__ refers to the name of the component inside the TN. Actual terraform output uses dashes which are a forbidden character for ansible variables.
#  e.g. if a components name is vm_kvm-myubuntu, its ID saved as a terraform output will be "vm_kvm_myubuntu-id"
############################################################################################################
terraform_outputs:
  __entity_name__id: "Variable tied to a specific deployment of this component."
  tn_ssh_public_key: "Variable with a global name. Generated by a component that can only be deployed once per TN, such as tn_init"
