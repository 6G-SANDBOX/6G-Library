######################################################
##
## Component public variables
##
## Diverse information read by the TNLCM
## to adapt its behaviour depending on the component.
##
######################################################


####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Jesus Macias Portela <jesus.maciasportela@telefonica.com>
    - Ana Isabel Lara García <anaisabel.laragarcia@telefonica.com>
    - Álvaro Curto Merino <alvaro.curtomerino@telefonica.com>
  short_description: Bootstraps the Trial Network with an initial Virtual Network (tn_vxlan) and a bastion VM (tn_bastion)
  long_description: |
    First component of any Trial Network, composed of two sepparate entities: tn_vxlan and tn_bastion:
    **tn_vxlan** is the main Virtual Network of the Trial Network and is accessible through the tn_bastion VPN.
    **tn_bastion** is a VM managing external access to the Trial Network and hosting various networking services such as:
    - DHCP server (not yet)
    - NTP server (not yet)
    - Public network masquerading
    - Port forwarding (not yet)
    - DNS server
    - VPN Server
    Internally this component works as a wrapper of both components within the same ansible playook.
  hypervisors: [one]


####################################
## Site-specific variables
####################################
site_variables:
  # None
  # Currently, site variables from tn_bastion and tn_vxlan are used instead


####################################
## Input variables
####################################
input:
  one_vxlan_netmask:
    description: Network mask of the tn_vxlan subnet
    type: int
    default_value: 24
    required_when: false
  one_vxlan_first_ip:
    description: First IP address of the VNet range
    type: str
    default_value: "192.168.199.1"
    required_when: false
  one_vxlan_address_size:
    description: Amount of IP addresses that compose the VNet range
    type: int
    default_value: 254
    required_when: false
  one_bastion_vpn_clients:
    description: For the Wireguard VPN, the number of client configurations to generate. Modify it to the number of experimenters expected to access the Trial Network simultaneously.
    type: int
    default_value: 1
    required_when: false
  one_bastion_vpn_allowedips:
    description: For the Wireguard VPN, comma-separated list of subnets that client configurations will route to the bastion.
    type: str
    default_value: "The subnet of tn_vxlan"
    required_when: false


####################################
## Generated terraform outputs
####################################
terraform_outputs:
  __tn_vxlan__id: "VNet ID in Opennebula. Generated from Terraform Manifest"
  __tn_vxlan__net: "Subnet of the VNet in CIDR format. Generated from Terraform Manifest"
  __tn_bastion__id: "VM ID in OpenNebula. Generated from Terraform Manifest"
  __tn_bastion__ips: "Dictionary of VM IP addresses: {<VNet ID in OpenNebula>: <IP address>}. Generated from Terraform Manifest"
  tn_dns_token: Token to authenticate to the tn_bastion DNS Server
  tn_routemanager_token: Bearer token to authenticate to the tn_bastion route-manager-api.
  tn_ssh_public_key: SSH public key to include in TN Virtual Machines for login with user tnuser
