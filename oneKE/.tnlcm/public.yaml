######################################################
##
## Component public variables
##
## Variables accesible to the experimenter.
##
## They are contained inside 3 global variables
## with all required info:
##
##   1. metadata: General information like mantainers,
##      component dependencies and allowed platforms
##
##   2. input: Customizable variables for each
##      deployment to be filled by the experimenter
##      or the TNLCM
##
##   3. output: Values sent to the TNLCM callback to
##      keep track of the TN deployments
##
######################################################


####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Jesus Macias Portela <jesus.maciasportela@telefonica.com>
    - Ana Isabel Lara García <anaisabel.laragarcia@telefonica.com>
    - Álvaro Curto Merino <alvaro.curtomerino@telefonica.com>
  short_description: Deploys a Kubernetes cluster in OpenNebula
  long_description: |
    Kubernetes cluster based on the oneKE service created and mantained by OpenNebula.
    It creates a rancher-based kubernetes cluster with 6 different VMs: vnf_0, master_0, worker_0, storage_0, storage_1 and storage_2
    More info in the official documentation: https://github.com/OpenNebula/one-apps/wiki/oneke_intro

    NOTE: Cluster customization will be progresivelly incorporated ad the OpenNebula Terraform provider gets more functionalities
  hypervisors: [one]
  sites: [uma, athens, fokus, oulu]

####################################
## Component input
####################################
input:
  one_oneKE_external_vnet:
    description: Name of the VNet used to expose the OneKE cluster. Most cases can leave the default tn_vxlan
    type: "tn_vxlan or vnet"
    default_value: "tn_vxlan"
    required_when: false

  one_oneKE_internal_vnet:
    description: Name of the VNet used to interconnect the OneKE nodes.
    type: "vnet"
    required_when: true

  one_oneKE_version:
    description: Version of the OneKE Appliance. 127A and 129A to be added in the future. Default value is "129"
    type: str
    default_value: "129"
    choices: ["127", "129"]
    required_when: false

  one_oneKE_multus:
    description: |
      Multus is a CNI (Container Network Interface) that enables attaching multiple network interfaces to pods.
      The Multus CNI is compatible with the primary CNI chosen, not a substitute for it
      Accepted values are "YES" or "NO" (quotes included). Default value is "YES"
    type: str
    default_value: "YES"
    choices: ["YES", "NO"]
    required_when: false

  one_oneKE_cni_plugin:
    description: |
      Primary CNI (Container Network Interface) to be enabled inside the OneKE for the connectivity between pods.
      Accepted values are:
        * cilium: High performant CNI with a plethora of functionalities with an eBPF-based dataplane.
        * calico: Popular CNI with advanced network policies, flat Layer 3 network and NAT for outbound traffic.
        * canal: combines Flannel and Calico, Flannel for pod traffic between hosts and Calico for network polico enforcement and pod to pod traffic.
      Default value is "canal"

      NOTE: Canal CNI stopped being officially supported since Kubernetes 1.28, but it still works
    type: str
    default_value: "canal"
    choices:
      - "cilium"
      - "calico"
      - "canal"
    required_when: false

  one_oneKE_cilium_range:
    description: |
      Range of IPs available for cilium CNI if it was selected in the "one_oneKE_cni_plugin" variable. The range will be ignored otherwise.
      The range has to be inside the "one_oneKE_internal_vnet" subnet, but preferably outside it's address range.
      Syntax is <min_IPv4>-<max_IPv4>
    type: str
    default_value: ""
    required_when: "one_oneKE_cni_plugin == 'cilium'"

  one_oneKE_metallb: 
    description: |
      Load-balancer implementation for bare-metal Kubernetes clusters, using standard routing protocols.
      Accepted values are "YES" or "NO" (quotes included). Default value is "YES"
    type: str
    default_value: "YES"
    choices: ["YES", "NO"]
    required_when: false 

  one_oneKE_metallb_range:
    description: |
      Range of IPs available for metalLB to allocate services if it was selected in the "one_oneKE_metallb" variable. The range will be ignored otherwise.
      The range has to be inside the "one_oneKE_internal_vnet" subnet, but preferably outside it's address range.
      Syntax is <min_IPv4>-<max_IPv4>
    type: str
    default_value: "10.10.12.200-10.10.12.240"
    required_when: "one_oneKE_metallb == 'YES'"

  one_oneKE_longhorn:
    description: |
      Longhorn provides highly available persistent storage for Kubernetes
      Accepted values are "YES" or "NO" (quotes included). Default value is "YES"
    type: str
    default_value: "YES"
    choices: ["YES", "NO"]
    required_when: false 

  one_oneKE_traefik:
    description: |
      Ingress controller that manages access to cluster services.
      Accepted values are "YES" or "NO" (quotes included). Default value is "NO"
    type: str
    default_value: "NO"
    choices: ["YES", "NO"]
    required_when: false 

  one_oneKE_dns:
    description: Space-separated list of DNS servers configured in the OneKE VNF
    type: "str"
    default_value: "1.1.1.1 8.8.8.8"
    required_when: false

####################################
## Component output
####################################
output:
  id: Service ID in OpenNebula
  node_ids: "dictionary of VM IDs in OpenNebula: key='VM name', value='the VM ID'"
  node_ips: "dictionary of VM addresses: key='VM name', value='the VM main address'"
  kubeconfig: Kubeconfig file with keys and endpoints to manage the cluster
  skooner_token: Generated Token to login to the skooner dashboard Web App
