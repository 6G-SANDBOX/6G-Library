######################################################
##
## Component public variables
##
## Diverse information read by the TNLCM
## to adapt its behaviour depending on the component.
##
######################################################


####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Jesus Macias Portela <jesus.maciasportela@telefonica.com>
    - Ana Isabel Lara García <anaisabel.laragarcia@telefonica.com>
    - Álvaro Curto Merino <alvaro.curtomerino@telefonica.com>
  short_description: Deploys a Kubernetes cluster in OpenNebula
  long_description: |
    Kubernetes cluster based on the oneKE service created and mantained by OpenNebula.
    It creates a rancher-based kubernetes cluster with 6 different VMs: vnf_0, master_0, worker_0, storage_0, storage_1 and storage_2
    More info in the official documentation: https://github.com/OpenNebula/one-apps/wiki/oneke_intro

    NOTE: Cluster customization will be progresivelly incorporated ad the OpenNebula Terraform provider gets more functionalities
  hypervisors: [one]
  appliance: https://marketplace.opennebula.io/appliance/591dd3f1-220f-46a5-83f4-31031c753b8a


####################################
## Site-specific variables
####################################
site_variables:
  "129":
    template_id: ID of the OneKE v1.29 service template to use in your OpenNebula environment
  "131":
    template_id: ID of the OneKE v1.31 service template to use in your OpenNebula environment
  "131a":
    template_id: ID of the OneKE v1.31 Airgapped service template to use in your OpenNebula environment


####################################
## Input variables
####################################
input:
  one_oneKE_external_vnet:
    description: Name of the VNet used to expose the OneKE cluster. Most cases can leave the default tn_vxlan
    type: "tn_vxlan or vnet"
    default_value: "tn_vxlan"
    required_when: false

  one_oneKE_internal_vnet:
    description: Name of the VNet used to interconnect the OneKE nodes.
    type: "vnet"
    required_when: true

  one_oneKE_version:
    description: Version of the OneKE Appliance. 129A and 131A not yet implemented, but could be added in the future. Default value is "129"
    type: str
    default_value: "131"
    choices: ["129","131","131a"]
    required_when: false

  one_oneKE_multus:
    description: |
      Multus is a CNI (Container Network Interface) that enables attaching multiple network interfaces to pods.
      The Multus CNI is compatible with the primary CNI chosen, not a substitute for it
      Accepted values are "YES" or "NO" (quotes included). Default value is "YES"
    type: str
    default_value: "YES"
    choices: ["YES", "NO"]
    required_when: false

  one_oneKE_cni_plugin:
    description: |
      Primary CNI (Container Network Interface) to be enabled inside the OneKE for the connectivity between pods.
      Accepted values are:
        * cilium: High performant CNI with a plethora of functionalities with an eBPF-based dataplane.
        * calico: Popular CNI with advanced network policies, flat Layer 3 network and NAT for outbound traffic.
        * canal: combines Flannel and Calico, Flannel for pod traffic between hosts and Calico for network polico enforcement and pod to pod traffic.
      Default value is "canal"

      NOTE: Canal CNI stopped being officially supported since Kubernetes 1.28, but it still works
    type: str
    default_value: "canal"
    choices:
      - "cilium"
      - "calico"
      - "canal"
    required_when: false

  one_oneKE_cilium_range:
    description: |
      Pool of IPs available to Cilium's BGP Control Plane to allocate Kubernetes services (svc)  if `one_oneKE_cni_plugin` is set to `cilium`.
      The range has to be inside the "one_oneKE_internal_vnet" subnet, but preferably outside it's address range.
      Syntax is a CIDR subnet. E.g. `"10.11.12.0/24"`
    type: str
    default_value: null
    required_when: false

  one_oneKE_metallb: 
    description: |
      Load-balancer implementation for bare-metal Kubernetes clusters, using standard routing protocols.
      Accepted values are "YES" or "NO" (quotes included). Default value is "YES"
    type: str
    default_value: "YES"
    choices: ["YES", "NO"]
    required_when: false 

  one_oneKE_metallb_range:
    description: |
      Range of IPs available to MetalLB to allocate Kubernetes services (svc) when variable `one_oneKE_metallb`` is set to `YES`.
      The range has to be inside the "one_oneKE_internal_vnet" subnet, but preferably outside it's address range.
      Syntax is <min_IPv4>-<max_IPv4>. E.g. `"10.21.12.200-10.21.12.240"`.
    type: str
    default_value: "10.21.12.200-10.21.12.240"
    required_when: false

  one_oneKE_longhorn:
    description: |
      Longhorn provides highly available persistent storage for Kubernetes
      Accepted values are "YES" or "NO" (quotes included). Default value is "YES"
    type: str
    default_value: "YES"
    choices: ["YES", "NO"]
    required_when: false 

  one_oneKE_traefik:
    description: |
      Ingress controller that manages access to cluster services.
      Accepted values are "YES" or "NO" (quotes included). Default value is "NO"
    type: str
    default_value: "NO"
    choices: ["YES", "NO"]
    required_when: false 

  one_oneKE_nginx_passthough:
    description: |
      Variable to enable or disable SSL/TLS passthrough in the Ingress-Nginx controller.
      Accepted values are "true" or "false" (no quotes included). Default value is "false"
    type: bool
    default_value: false
    required_when: false

####################################
## Generated terraform outputs
####################################
terraform_outputs:
  __entity_name__id: "Service ID in OpenNebula. Generated from Terraform Manifest"
  __entity_name__roles: "Array with service roles information. Generated from Terraform Manifest"
  __entity_name__node_ids: "Dictionary of VM IDs in OpenNebula: key='VM name', value='the VM ID'"
  __entity_name__node_ips: "Dictionary of VM addresses: key='VM name', value='the VM main address'"
  __entity_name__metadata:
    external_vnet: input.one_oneKE_external_vnet
    internal_vnet: input.one_oneKE_internal_vnet
    version: input.one_oneKE_version
    multus: input.one_oneKE_multus
    cni_plugin: input.one_oneKE_cni_plugin
    cilium_range: input.one_oneKE_cilium_range
    metallb_range: input.one_oneKE_metallb_range
    longhorn: input.one_oneKE_longhorn
    nginx_passthrough: input.one_oneKE_nginx_passthrough
