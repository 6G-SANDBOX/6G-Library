---
- name: Prepare workspace with necessary enviromental variables and the bastion VM
  hosts: localhost
  # gathering facts is necessary as many ansible variables come from enviromental variables from jenkins
  gather_facts: true
  tasks:
    # NOTE: First 3 tasks seem common for all components.
    - name: Load enviromental variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/mix_variables_tasks.yaml"      # mix_variables.yaml not used?

    # NOTE: Second task would need negative conditional for vxlan and tn_bastion components
    - name: Include Trial Network bastion VM to Ansible inventory
      ansible.builtin.add_host:
        name: "{{ tn_id }}-tn-bastion"

    # NOTE: prepare.yml file can be common for all components if the provider being used can be specified here
    - name: Prepare terraform manifests from templates
      ansible.builtin.include_tasks: "./{{ site_hypervisor }}/prepare.yaml"

    # DELETE ASAP. It OUTPUTS private info.
    - name: Debug enviromental variables
      ansible.builtin.shell:
      args:
        cmd: "printenv"
      register: env_vars
    - name: Terraform DEBUG
      ansible.builtin.debug:
        msg: "{{ env_vars }}"

    - name: Execute terraform apply
      community.general.terraform:
        project_path: "./{{ site_hypervisor }}/iac/"
        state: "present"
        force_init: true
      register: result

    - name: Terraform DEBUG
      ansible.builtin.debug:
        msg: "{{ result }}"

    # - name: Get Terraform Output
    #   ansible.builtin.shell:
    #   args:
    #     chdir: "./{{ site_hypervisor }}/iac/"
    #     cmd: "terraform output --json | jq 'with_entries(.value |= .value)'"
    #   register: terraform_output

#     - name: Load Terraform Output into execution context
#       ansible.builtin.set_fact:
#         outputs: "{{ terraform_output.stdout | from_json }}"

#     - name: Get VM ip from default site network
#       ansible.builtin.set_fact:
#         vm_ip: "{{ item.value }}"
#       loop: "{{ lookup('ansible.builtin.dict', outputs[one_component_name + \"_network_assignments\"], wantlist=True) }}"
#       when: item.key | int == one_component_networks[0]

#     - name: Verify that is correctly loaded
#       ansible.builtin.debug:
#         msg: "Network Interface {{ vm_ip | default('----')}}"

#     - name: Add new VM to Ansible Inventory
#       ansible.builtin.add_host:
#         hostname: "{{ tn_id }}-{{ one_component_name }}"
#         ansible_user: "root"

#     - name: Create SSH config file into Jenkins
#       ansible.builtin.include_tasks: "./{{ site_hypervisor }}/cac/03_post/create_ssh_config_file.yaml"

# # STAGE 3: Execute manifest
# - name: Wait for VM ready from jenkins jumping through TN Bastion
#   hosts: localhost
#   tasks:
#     - name: Try SSH - Wait for contextualization ready
#       shell: "ssh {{ tn_id }}-{{ one_component_name }} ls"
#       register: test
#       until: "test is not failed"
#       retries: 10
#       delay: 20

# # STAGE 4: Execute manifest
# - name: Infrastructure Tasks
#   hosts: "{{ hostvars['localhost']['tn_id'] }}-{{ hostvars['localhost']['one_component_name'] }}"
#   gather_facts: true
#   tasks:
#     - name: Load Variables into new VM
#       ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/mix_variables_tasks.yaml"

#     - command: "cat /etc/hostname"
#       register: hostname_out

#     - name: "DEBUG"
#       ansible.builtin.debug:
#         msg: "{{ hostname_out | to_json }}"

# # STAGE 5: Execute manifest
# - name: Infrastructure Tasks
#   hosts: localhost
#   tasks:
#     - name: Publish execution results
#       ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/publish_results_tasks.yaml"

#     - name: Upload Terraform manifest
#       ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/upload_manifest_to_folder_tasks.yaml"
#       when: not result.failed
