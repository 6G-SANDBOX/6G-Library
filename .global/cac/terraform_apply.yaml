---
- name: "Prepare {{ component_type }} terraform manifest"
  ansible.builtin.template:
    src: "{{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/iac/{{ component_type }}.tf.j2"
    dest: "{{ workspace }}/.terraform/tf-{{ entity_name }}.tf"
  when: terraform_template | default(false)
  
- name: Terraform apply
  community.general.terraform:
    project_path: "{{ workspace }}/.terraform/"
    state: "present"
    force_init: true
  ignore_errors: true
  register: terraform_apply

- name: Check terraform apply return code
  when: terraform_apply.failed
  block:
    - name: Generate FAIL markdown response
      ansible.builtin.template:
        src: "{{ workspace }}/{{ component_type }}/result_templates/fail_result.md.j2"
        dest: "{{ workspace }}/{{ component_type }}/code/fail_result-{{ entity_name }}.md"

    - name: Encode FAIL markdown response into base64
      ansible.builtin.slurp:
        src: "{{ workspace }}/{{ component_type }}/code/fail_result-{{ entity_name }}.md"
      register: fail2markdown

    - name: Generate FAIL json response
      ansible.builtin.template:
        src: "{{ workspace }}/.global/json_templates/fail_result.json.j2"
        dest: "{{ workspace }}/{{ component_type }}/code/fail_result-{{ entity_name }}.json"

    - name: Debug FAIL json response
      ansible.builtin.debug:
        msg: "{{ workspace }}/.global/json_templates/fail_result.json.j2"
      when: debug

    - name: Send FAIL json response to TNLCM
      ansible.builtin.uri:
        url: "{{ tnlcm_callback }}"
        method: POST
        body_format: json
        src: "{{ workspace }}/{{ component_type }}/code/fail_result-{{ entity_name }}.json"
      register: tnlcm_post
      ignore_errors: true

    - name: Stop pipeline execution
      ansible.builtin.meta: end_play
