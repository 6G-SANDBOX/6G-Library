---
- name: debug variables
  debug:
    var:
      - exceptions
      - nat_exceptions
  when: true

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - /etc/nftables
    - /etc/nftables/fw_exceptions
    - /etc/nftables/nat_exceptions

- name: Write firewall exception into a new file
  become: true
  ansible.builtin.template:
    src: "{{ workspace }}/.global/templates/fw_exception.nft.j2"
    dest: "/etc/nftables/fw_exceptions/{{ entity_name }}.nft"
    owner: root
    group: root
    mode: '0644'
  when: exceptions is defined

- name: Write firewall NAT exception into a new file
  become: true
  ansible.builtin.template:
    src: "{{ workspace }}/.global/templates/nat_exception.nft.j2"
    dest: "/etc/nftables/nat_exceptions/{{ entity_name }}.nft"
    owner: root
    group: root
    mode: '0644'
  when: nat_exceptions is defined

- name: copy nftables.conf (Temporary until appliance update)
  become: true
  copy:
    src: "{{ workspace }}/.global/templates/nftables.conf"
    dest: "/etc/nftables.conf"
    owner: root
    group: root
    mode: '0644'

- name: Check nftables syntax
  become: true
  ansible.builtin.command: nft -c -f /etc/nftables.conf
  register: nft_check
  failed_when: nft_check.rc != 0
  changed_when: false

- name: Reload nftables rules
  become: true
  ansible.builtin.systemd_service:
    name: nftables.service
    state: restarted
    enabled: true
