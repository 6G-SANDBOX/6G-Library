---
- name: Run terraform init
  ansible.builtin.command: "terraform init"
  args:
    chdir: "{{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/iac/"
    creates: "{{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/iac/.terraform/"

- name: Retrieve current terraform outputs
  ansible.builtin.shell:
  args:
    chdir: "{{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/iac/"
    cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
    executable: /bin/bash
  register: current_outputs
  changed_when: false

- name: Load them as host facts
  ansible.builtin.set_fact:
    "{{ new_key | join('.') }}": "{{ item.value }}"
  loop: "{{ current_outputs.stdout | from_json | dict2items }}"
  vars:
    new_key: "{{ item.key | replace('-', '.') | split('.') }}"

- name: Set Ansible facts
  set_fact:
    "{{ component | regex_replace('-', '_') }}": "{{ (component | regex_replace('-', '_')) | default({}) | combine({attribute: value}) }}"
  loop: "{{ current_outputs.stdout.keys() }}"
  loop_control:
    loop_var: item
  vars:
    component: "{{ item.split('-') | slice(0,1) | join('-') }}"
    attribute: "{{ item.split('-')[1:] | join('-') }}"
    value: "{{ current_outputs.stdout[item] }}"