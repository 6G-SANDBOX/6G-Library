######################################################
##
## Component public variables
##
## Variables accesible to the experimenter.
##
## They are contained inside 4 global variables
## with all required info:
##   1. name: name of the component
##
##   2. metadata: General information like mantainers,
##      component dependencies and allowed platforms
##
##   3. input: Customizable variables for each
##      deployment to be filled by the experimenter
##      or the TNLCM
##
##   4. output: Values sent to the TNLCM callback to
##      keep track of the TN deployments
##
## File previously found at "public/description.yaml"
##
######################################################


# "name" was previouslly called "component_name", "input" was "public" and "output" was "outputs"
# The public.yaml file is unused in component deployments and serves the TNLCM to gather data about the component.
# 
# Only "name" and "input" are useful for the deployment of Trial Networks, while metadata and output serve the THLCM

# metadata gives the TNLCM some general information to help it understand how to process and order the different components. Fields:
#   - mantainers: Unordered list of active component mantainers
#   - needs: Unordered list of dictionaries of appliance types that needs to be previously deployed. Values can be repeated if multiple instances of the same type are needed.
#            Dependencies can be defined so that they only apply when specific input values are provided, either in the other component ("with") or in this component ()"if"). See example
#   - short_description: Shown in THLCM
#   - long_description: Shown in TNLCM
#   - hypervisors: Unordered list of compatible hypervisors
#   - sites: Unordered list of sites where the component is avaiable. Useful for hardware-dependent components

# input describes all variables needed in a TN descriptor. Each variable containers the following fields:
#   - description; A general description of the variable. It appears in the TNLCM Frontend
#   - type: Expected data format. Avaiable types are "str", "int", "strlist" and "intlist"
#   - choices: Optional parameter that only appears in variables with limited possible values
#   - value: Placeholder value that appears in the TNLCM
#   - user_input: Variable will be asked to the experimenter in the TNLCM.
#                 completes this variable using other component's metadata or outputs.
#   - optional: If "user_input: True", indicates whether the placeholder ("value") serves as a default value or not. If negative, a value must always be provided by the experimenter
#               If "user_input: False", this field is irrelevant, as the variable will always be filled.

#Â output values are a list of empty dictionaries of the variables expected be generated during deployments, mainly from the terraform apply.
# They may not only be useful for the TNLCM. They can also be used to generate the result files at the end of each deployment

# POSSIBLE FUTURE FEATURE: add version to component dependencies. Currently TNs need to have all components in the same 6G Library version

####################################
## Component name
####################################
name: Component_Name

####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Full Name <contact@mail.address>
  needs:
    - vxlan:         # dependency on a previously deployed vxlan component of any kind prev
    - k8s_medium:       # dependency on a previously deployed k8s_medium component with input value one_k8s_multus: "YES"
        with:
          one_k8s_multus: "YES"
    - ueransim:         # dependency on a previously deployed ueransim component with input value run_gnb: "YES" ONLY IF this component has input value 'sample_optional_value: "positive"'
        with:
          run_gnb: "YES"
        if:
          sample_optional_value: "positive"
  short_description: Short description of a Component Type
  long_description: |
    The long description of a Component Type may span multiple lines
    and provide a more in depth outline of it's purpose
  hypervisors: [one]
  sites: [uma, athens, fokus]

####################################
## Component input
####################################
input:
  sample_optional_variable:
    description: Description of an optional variable
    type: "str"
    value: "PLACEHOLDER VALUE"
    user_input: true
    optional: true
  sample_mandatory_variable:
    description: Description of a mandatory variable
    type: "int"
    value: "1"
    user_input: true
    optional: false
  sample_tnlcm_variable:
    description: |
      This description is surely useless as the experimenter should not worry to fill this variable
    type: "intlist"
    value:
      - 1
      - 2
      - 3
    user_input: false
  sample_choice_variable:
    description: Variable with only 2 possible "str" values
    type: "str"
    choices:
      - "YES"
      - "NO"
    value: "NO"
    user_input: true
    optional: true

####################################
## Component output
####################################
output:
  terraform_outputs_value:
