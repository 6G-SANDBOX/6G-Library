######################################################
##
## Component public variables
##
## Diverse information read by the TNLCM
## to adapt its behaviour depending on the component.
##
######################################################


####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Jesus Macias Portela <jesus.maciasportela@telefonica.com>
    - Ana Isabel Lara García <anaisabel.laragarcia@telefonica.com>
    - Álvaro Curto Merino <alvaro.curtomerino@telefonica.com>
  short_description: Main bridge VM to access the Trial Network. Deploying tn_init instead is the recommended approach.
  long_description: |
    Bootstrap VM of any Trial Network.
    It manages external access to the TN and hosts various networking services such as:
    - DHCP server (not yet)
    - NTP server (not yet)
    - Public network masquerading
    - Port forwarding (not yet)
    - DNS server
    - VPN Server
    Deploying tn_init instead is the recommended approach, as it serves as a wrapper of both tn_vxlan and tn_bastion.
  hypervisors: [one]
  appliance: https://marketplace.mobilesandbox.cloud:9443/appliance/service_bastion


####################################
## Site-specific variables
####################################
site_variables:
  template_id: ID of the BASTION VM template to use in your OpenNebula environment
  image_id: ID of the BASTION image to use in your OpenNebula environment


####################################
## Input variables
####################################
input:
  one_bastion_vpn_clients:
    description: For the Wireguard VPN, the number of client configurations to generate. Modify it to the number of experimenters expected to access the Trial Network simultaneously.
    type: int
    default_value: 1
    required_when: false
  one_bastion_vpn_allowedips:
    description: For the Wireguard VPN, comma-separated list of subnets that client configurations will route to the bastion.
    type: str
    default_value: "The subnet of tn_vxlan"
    required_when: false


####################################
## Generated terraform outputs
####################################
terraform_outputs:
  __tn_bastion__id: "VM ID in OpenNebula. Generated from Terraform Manifest"
  __tn_bastion__ips: "Dictionary of VM IP addresses: {<VNet ID in OpenNebula>: <IP address>}. Generated from Terraform Manifest"
  tn_dns_token: Token to authenticate to the tn_bastion DNS Server
  tn_routemanager_token: Bearer token to authenticate to the tn_bastion route-manager-api.
  tn_ssh_public_key: SSH public key to include in TN Virtual Machines for login with user tnuser
