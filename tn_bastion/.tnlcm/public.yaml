######################################################
##
## Component public variables
##
## Variables accesible to the experimenter.
##
## They are contained inside 3 global variables
## with all required info:
##
##   1. metadata: General information like mantainers,
##      component dependencies and allowed platforms
##
##   2. input: Customizable variables for each
##      deployment to be filled by the experimenter
##      or the TNLCM
##
##   3. output: Values sent to the TNLCM callback to
##      keep track of the TN deployments
##
######################################################


####################################
## Component metadata
####################################
metadata:
  maintainers:
    - Jesus Macias Portela <jesus.maciasportela@telefonica.com>
    - Ana Isabel Lara García <anaisabel.laragarcia@telefonica.com>
    - Álvaro Curto Merino <alvaro.curtomerino@telefonica.com>
  short_description: This is a VM that acts as bastion for a Trial Network
  long_description: |
    Legacy bootrap VM in any Trial Network. tn_init is the new recommended component for starting Trial Networks
    It manages external access to the TN and hosting various networking services such as:
    - DHCP server
    - NTP server
    - Public network masquerading
    - Port forwarding
    - DNS server
    - VPN Server

    NOTE: Current tn_bastion only hosts the VPN Server
  hypervisors: [one]


####################################
## Component input
####################################
input:
  one_bastion_dns_password:
    description: For the Technitium DNS, admin user password.
    type: str
    default_value: "admin"
    required_when: false
  one_bastion_dns_forwarders:
    description: For the Technitium DNS, comma-separated list of forwarders to be used by the DNS server.
    type: str
    default_value: "Your site's DNS as defined in variable site_dns. If it doesn't exist, '8.8.8.8,1.1.1.1' will be used"
    required_when: false
  one_bastion_dns_domain:
    description: For the Technitium DNS, domain name for creating the new zone. 
    type: str
    default_value: "The TN_ID + your site's domain as defined in variable site_domain. If it doesn't exist, TN_ID + 'tnsdomain.internal' will be used"
    required_when: false
  oneapp_bastion_routemanager_token:
    description: For the route-manager-api, token to authenticate to the API. If not provided, a new one will be generated at instanciate time with `openssl rand -base64 32`.
    type: str
    default_value: ""
    require_when: false
  one_bastion_routemanager_port:
    description: For the route-manager-api, TCP port where the API service is be exposed.
    type: int
    default_value: 8172
    required_when: false
  one_bastion_vpn_clients:
    description: For the Wireguard VPN, the number of client configurations to generate. Modify it to the number of experimenters expected to access the Trial Network simultaneously.
    type: int
    default_value: 1
    required_when: false
  one_bastion_vpn_allowedips:
    description: For the Wireguard VPN, comma-separated list of subnets that client configurations will route to the bastion.
    type: str
    default_value: "The subnet of tn_vxlan"
    required_when: false

####################################
## Component output
####################################
output:
  ips: "dictionary of VM addresses: key='VNet ID in OpenNebula', value='the IP address'"
  id: VM ID in OpenNebula
  vpn_client_tunnel: VPN Client config to connect to this Trial Network
  tn_ssh_public_key: SSH public key present in the TN VMs for the user tnuser
  tn_ssh_private_key: SSH public key to access the TN VMs with the user tnuser


####################################
## Site-specific variables
####################################
site_variables:
  template_id: ID of the BASTION VM template to use in your OpenNebula environment
  image_id: ID of the BASTION image to use in your OpenNebula environment