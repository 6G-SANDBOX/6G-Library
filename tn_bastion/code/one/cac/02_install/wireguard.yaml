---
- name: Generate private key for the VPN server
  ansible.builtin.command: wg genkey
  register: server_privatekey
  changed_when: false

- name: Generate public key for the VPN server
  ansible.builtin.command: wg pubkey
  args:
    stdin: "{{ server_privatekey.stdout }}"
  register: server_publickey
  changed_when: false

# The endpoint port is site_ports_prefix + last (site_ports_length - prefix) digits of the first IP of the bastion, the one supposed to be reachable outside of the Trial Network
- name: Set endpoint's port suffix from the first IP address
  ansible.builtin.set_fact:
    port_suffix: "{{ (default_ip | regex_replace('[^0-9]', '') | string)[-(site_ports_digits | int - site_ports_prefix | string | length):] }}"

- name: Write wg0.conf
  become: true
  ansible.builtin.template:
    src: "{{ workspace }}/tn_bastion/code/{{ site_hypervisor }}/cac/02_install/templates/wg0.conf.j2"
    dest: /etc/wireguard/wg0.conf
    owner: root
    group: root
    mode: '0600'

- name: Initialize the variable to store client configurations
  ansible.builtin.set_fact:
    tn_wg_clients: []

- name: Add VPN clients
  include_tasks: "{{ workspace }}/tn_bastion/code/{{ site_hypervisor }}/cac/02_install/wg_client.yaml"
  vars:
    client: "{{ item }}"
  loop: "{{ range(0, one_bastion_vpn_clients) | list }}"

- name: Start wireguard VPN
  become: true
  ansible.builtin.systemd_service:
    name: wg-quick@wg0.service
    state: started
    enabled: true
