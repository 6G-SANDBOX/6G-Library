---
- name: "STAGE 1: Apply IAC to deploy the component" 
  hosts: localhost
  gather_facts: false
  tasks: 
    - name: Prepare terraform manifests
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/tasks/prepare_one_iac.yaml"
      when: site_hypervisor == "one"

    - name: Terraform apply
      community.general.terraform:
        project_path: "{{ workspace }}/{{ library_component_name }}/code/{{ site_hypervisor }}/iac/"
        state: "present"
        force_init: true
      ignore_errors: true
      register: terraform_apply
  
- name: "STAGE 2: Prepare to access the component"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Retrieve terraform output
      ansible.builtin.shell:
      args:
        chdir: "{{ workspace }}/{{ library_component_name }}/code/{{ site_hypervisor }}/iac/"
        cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
        executable: /bin/bash
      register: terraform_output
      changed_when: false
      when: not terraform_apply.failed

    - name: Set Terraform outputs as facts
      ansible.builtin.set_fact:
        ips: "{{ (terraform_output.stdout | from_json)['tn_bastion-ips'] }}"
        id: "{{ (terraform_output.stdout | from_json)['tn_bastion-id'] }}"
      when: not terraform_apply.failed

    - name: Verify that the bastion access IP is correctly loaded
      ansible.builtin.debug:
        msg: "Network Main Interface is: {{ ips[one_component_networks[0] | string] | default('----') }}"

    - name: Add new VM to Ansible Inventory
      ansible.builtin.add_host:
        hostname: "{{ library_component_name }}"
        ansible_host: "{{ ips[one_component_networks[0] | string] }}"

    - name: Create SSH config file in the Jenkins-master for debugging purposes
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/tasks/write_ssh_config.yaml"
      

- name: "STAGE 3: Apply CAC to prepare the component"
  hosts: "{{ library_component_name }}"
  gather_facts: false
  tasks:
    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:
        connect_timeout: 5
        delay: 20
        timeout: 120

    ### In theory, fact gathering is not needed for the component configuration
    # - name: Gather facts for first time
    #   ansible.builtin.setup:

    ### Calling tasks/load_variables.yaml is also unnecesary, as I can call localhost values with hostvars['localhost']['var_name'] or hostvars['localhost'].var_name"
    ### But it makes the code much MUCH cleaner
    - name: Load enviromental variables from different sources inside the component
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/tasks/load_variables.yaml"

    - name: Execute Post Configuration
      ansible.builtin.include_tasks: "{{ workspace }}/{{ site_hypervisor }}/cac/03_post/get_vpn_client_tunnel.yaml"
      when: site_hypervisor == "one"

    # TODO en config de otras VMs, crear el user (privilegiado o no) y accesible con esta ssh-key
    - name: Create an ed25519 ssh key pair to access the future Trial Network components
      ansible.builtin.include_tasks: "{{ workspace }}/{{ site_hypervisor }}/cac/03_post/get_vpn_client_tunnel.yaml"

- name: "STAGE 4: Publish execution results"
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Publish execution results to TNLCM
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/tasks/publish_results.yaml"

    - name: Upload markdown info to S3 storage
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/tasks/s3_upload.yaml"
      when: not terraform_apply.failed
