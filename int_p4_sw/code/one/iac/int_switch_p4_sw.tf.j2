{% for switch_name, switch_config in one_int_p4_sw_switches.items() %}
resource "opennebula_virtual_machine" "{{ entity_name }}_{{ loop.index0 }}" {
  name        = "{{ tn_id }}-{{ entity_name }}-{{ loop.index0 }}"
  template_id = {{ site_available_components.vm_kvm.template_id }}
  cpu         = {{ one_int_p4_sw_cpu }}
  vcpu        = {{ one_int_p4_sw_cpu }}
  memory      = {{ one_int_p4_sw_memory }}

  context = {
    NETWORK = "YES"
    SET_HOSTNAME = "$NAME"
    USERNAME = "jenkins"
  }

{% for network in switch_config.networks %}
  nic {
    model           = "virtio"
    network_id      = opennebula_virtual_network.{{ network }}.id
  }
{% endfor %}

  depends_on = [ opennebula_virtual_network_address_range.tn_vxlan ]
}

{% endfor %}

output "{{ entity_name }}_switches-ids" {
  description = "List of OpenNebula INT Switch VM IDs"
  value       = [
    {% for switch_name, switch_config in one_int_p4_sw_switches.items() -%}
    opennebula_virtual_machine.{{ entity_name }}_{{ loop.index0 }}.id,
    {% endfor %}
  ]
}

output "{{ entity_name }}_switches-ips" {
  description = "OpenNebula INT Switch VM Network Assignments for all VMs"
  value = {
    {% for switch_name, switch_config in one_int_p4_sw_switches.items() %}
    "{{ loop.index0 }}": {
      {% for network in switch_config.networks %}
      "{{ network }}": opennebula_virtual_machine.{{ entity_name }}_{{ loop.index0 }}.nic[{{ loop.index0 }}].computed_ip,
      {% endfor %}
    },
    {% endfor %}
  }
}