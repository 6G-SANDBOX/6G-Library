# START MANDATORY BLOCK
- name: Generate installation manifest from templates
  hosts: localhost
  gather_facts: true
  tasks: 
    - name: Mix variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/mix_variables_tasks.yaml"
# END MANDATORY BLOCK

# STAGE 1: Prepare manifest from templates
- name: Generate installation manifest from templates
  hosts: localhost
  tasks: 
    - name: Generate installation manifest from templates
      ansible.builtin.include_tasks: "./{{ site_hypervisor }}/prepare.yaml"

# STAGE 2: Execute manifest
- name: Infrastructure Tasks
  hosts: localhost
  tasks:
    - name: Download Terraform manifest from previos TN components
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/download_bucket_content_tasks.yaml" 
          
    - name: Execute terraform apply
      community.general.terraform:
        project_path: "./{{ site_hypervisor }}/iac/"
        state: "present"
        force_init: true
      register: result 
    
    - name: Get Terraform Output
      ansible.builtin.shell:
      args:
        chdir: "./{{ site_hypervisor }}/iac/"
        cmd: "terraform output --json | jq 'with_entries(.value |= .value)'"
      register: terraform_output

    - name: Upload Terraform manifest
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/upload_manifest_to_folder_tasks.yaml"
      vars:
        dst_folder: "{{ playbook_dir }}/{{ site_hypervisor }}/iac/"
    
    - name: Update TNLCM with component deployment outputs
      ansible.builtin.debug:
        msg: "Upload to Terraform states repository {{ tnlcm_callback }}"

    - name: Load Terraform Output into execution context
      ansible.builtin.set_fact:
        outputs: "{{ terraform_output.stdout | from_json }}"

    - name: Get VM ip from default site network
      ansible.builtin.set_fact:
        vm_ip: "{{ item.value }}"
      loop: "{{ lookup('ansible.builtin.dict', outputs[one_component_name + \"_network_assignments\"]) }}"
      when: item.key | int == site_default_network_id

    - name: Verify that is correctly loaded
      ansible.builtin.debug:
        msg: "Network Interface {{ vm_ip }}"