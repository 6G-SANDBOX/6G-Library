# START MANDATORY BLOCK
- name: Generate installation manifest from templates
  hosts: localhost
  gather_facts: true
  tasks: 
    - name: Mix variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/mix_variables_tasks.yaml"
    - name: 'Add bastion hosts to be able to jump'
      ansible.builtin.add_host:
        name: "{{ tn_id }}-tn-bastion"      
# END MANDATORY BLOCK

# STAGE 1: Prepare manifest from templates
- name: Generate installation manifest from templates
  hosts: localhost
  tasks: 
    - name: Generate installation manifest from templates
      ansible.builtin.include_tasks: "./{{ site_hypervisor }}/prepare.yaml"

# STAGE 2: Execute manifest
- name: Infrastructure Tasks
  hosts: localhost
  tasks:
    - name: Download Terraform manifest from previos TN components
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/download_bucket_content_tasks.yaml" 
          
    - name: Execute terraform apply
      community.general.terraform:
        project_path: "./{{ site_hypervisor }}/iac/"
        state: "present"
        force_init: true
      register: result 
    
    - name: Terraform DEBUG
      ansible.builtin.debug:
        msg: "{{ result }}"

    - name: Get Terraform Output
      ansible.builtin.shell:
      args:
        chdir: "./{{ site_hypervisor }}/iac/"
        cmd: "terraform output --json | jq 'with_entries(.value |= .value)'"
      register: terraform_output

    - name: Load Terraform Output into execution context
      ansible.builtin.set_fact:
        outputs: "{{ terraform_output.stdout | from_json }}"

    - name: Get VM ip from default site network
      ansible.builtin.set_fact:
        vm_ip: "{{ item.value }}"
      loop: "{{ lookup('ansible.builtin.dict', outputs[one_component_name + \"_network_assignments\"], wantlist=True) }}"
      when: item.key | int == one_component_networks[0]

    - name: Verify that is correctly loaded
      ansible.builtin.debug:
        msg: "Network Interface {{ vm_ip | default('----')}}"

    - name: Add new VM to Ansible Inventory
      ansible.builtin.add_host:
        hostname: "{{ tn_id }}-{{ one_component_name }}"
        ansible_user: "root"

    - name: Create SSH config file into Jenkins
      ansible.builtin.include_tasks: "./{{ site_hypervisor }}/cac/03_post/create_ssh_config_file.yaml"        

# # STAGE 3: Execute manifest
# - name: Infrastructure Tasks
#   hosts: "{{ hostvars['localhost']['tn_id'] }}-tn-bastion"
#   gather_facts: true
#   tasks:
#     - name: Wait for service to be ready
#       wait_for:
#         port: 22
#         host: "{{ hostvars['localhost']['vm_ip'] }}"
#         connect_timeout: 5
#         delay: 20
#         timeout: 120  

# STAGE 3: Execute manifest
- name: Wait for VM Ready
  hosts: localhost
  tasks:
    - name: Try SSH - Wait for contextualization ready
      shell: "ssh {{ tn_id }}-{{ one_component_name }} ls"
      register: test
      until: "test is not failed"
      retries: 10
      delay: 20
  
# STAGE 3: Execute manifest
- name: Infrastructure Tasks
  hosts: "{{ hostvars['localhost']['tn_id'] }}-{{ hostvars['localhost']['one_component_name'] }}"
  gather_facts: true
  tasks:
    - name: Load Variables into new VM
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/mix_variables_tasks.yaml"

    - command: "cat /etc/hostname"
      register: hostname_out

    - name: "DEBUG" 
      ansible.builtin.debug:
        msg: "{{ hostname_out | to_json }}"

