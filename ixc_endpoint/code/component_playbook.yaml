---
- name: "STAGE 1: Apply IAC to deploy the component"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Load enviromental variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/load_variables.yaml"

    - name: Prepare terraform working directory
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/terraform_workdir.yaml"

    - name: Terraform apply
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/terraform_apply.yaml"


- name: "STAGE 2: Prepare to access the component"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Retrieve terraform outputs
      ansible.builtin.shell:
      args:
        chdir: "{{ workspace }}/.terraform/"
        cmd: "set -o pipefail && terraform output --json | jq 'with_entries(.value |= .value)'"
        executable: /bin/bash
      register: terraform_outputs
      changed_when: false

    - name: Set Terraform outputs as playbook facts
      ansible.builtin.set_fact:
        bastion_ip: "{{ (terraform_outputs.stdout | from_json)['tn_bastion-ips'][site_networks_id.default | string] }}"
        tn_ssh_public_key: "{{ (terraform_outputs.stdout | from_json)['tn_ssh_public_key'] }}"
        tn_dns_token: "{{ (terraform_outputs.stdout | from_json)['tn_dns_token'] }}"
        ips: "{{ (terraform_outputs.stdout | from_json)[entity_name + '-ips'] }}"
        id: "{{ (terraform_outputs.stdout | from_json)[entity_name + '-id'] }}"
        access_vnet_id: "{{ (terraform_outputs.stdout | from_json)[one_ixc_endpoint_networks[0] + '-id'] | string }}"
        domain_name: >-
          {{
            ((component_type | regex_replace('_', '') | lower) ~ '-' ~
            (custom_name | regex_replace('_', '') | lower) ~ '.' ~
            (tn_id | lower) ~ '.' ~
            (site_domain | lower)) | trim
          }}

    - name: Add new VM to Ansible Inventory
      ansible.builtin.add_host:
        hostname: "endpoint"
        ansible_host: "{{ ips[access_vnet_id] }}"
        ansible_ssh_common_args: "-J jenkins@{{ bastion_ip }}"
        ansible_user: "jenkins"

    - name: Add the bastion to Ansible Inventory
      ansible.builtin.add_host:
        hostname: "bastion"
        ansible_host: "{{ bastion_ip }}"
        ansible_user: "jenkins"

    - name: Add new VM to SSH config file in the Jenkins-master for debugging purposes
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/jenkins_ssh_config.yaml"

    - name: Add new VM to an SSH config file ment to be usable by the experimenter
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/tnuser_ssh_config.yaml"


- name: "STAGE 3: Apply CAC to prepare the component"
  hosts: "endpoint"
  gather_facts: false
  tasks:
    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:
        connect_timeout: 5
        timeout: 200

    - name: Set site ssh key as authorized in jenkins user
      ansible.posix.authorized_key:
        user: jenkins
        state: present
        key: "{{ item }}"
      loop:
        - "{{ hostvars['localhost'].get('site_admin_ssh_public_key', '') }}"
      when: item != ''

    - name: Create new user for experimenter access
      become: true
      ansible.builtin.user:
        name: tnuser
        shell: /bin/bash
        groups: sudo
        password: ''
    - name: Set TN ssh key as authorized in new user
      become: true
      ansible.posix.authorized_key:
        user: tnuser
        state: present
        key: "{{ item }}"
      loop:
        - "{{ hostvars['localhost']['tn_ssh_public_key'] }}"


- name: "STAGE 3: Access tn_bastion to set firewall exceptions"
  hosts: bastion
  gather_facts: false
  tasks:
    - name: Load enviromental variables from different sources
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/load_variables.yaml"

    - name: Write firewall exception for the IxChariot Registration Server
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/nftables_add.yaml"
      vars:
        fw_exceptions:
          - "{{ one_ixc_endpoint_rs }}"


- name: "STAGE 5: Publish execution results"
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Set DNS record for the component
      ansible.builtin.uri:
        url: >-
          {{
            'http://' ~ bastion_ip ~ ':5380/api/zones/records/add?token=' ~ tn_dns_token ~
            '&domain=' ~ domain_name ~
            '&type=A&ptr=true&createPtrZone=true&ipAddress=' ~ ips[access_vnet_id] | trim
          }}
        method: POST
        body_format: json
        status_code: [200]

    - name: Publish execution results to TNLCM and S3 object storage
      ansible.builtin.include_tasks: "{{ workspace }}/.global/cac/publish_ok_results.yaml"
