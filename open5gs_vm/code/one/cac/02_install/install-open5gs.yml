---
- name: Setting up open5gs VM
  become: true
  vars:
    install_webgui: False
    update_netplan: False
    n2_ip: {{ ips_dict[1].ip | default(127.0.0.5) }}
    n3_ip: {{ ips_dict[1].ip | default(127.0.0.7) }}
    #n6_ip:
    ue_subnet: 10.45.0.0/16
    mcc: 001
    mnc: 01
    slice_sd: "000001"
  block:
    - name: Update apt cache and upgrade packages.
      apt: update_cache=true cache_valid_time=3600 upgrade=full

    - name: add MongoDB 6 PPA
      block:
        - name: MongoDB 6 |no apt key
          ansible.builtin.get_url:
            url: https://pgp.mongodb.com/server-6.0.asc
            dest: /etc/apt/keyrings/mongodb-server-6.0.asc

        - name: MongoDB 6 | apt source
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/mongodb-server-6.0.asc] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse"
            state: present

    - name: Install mongodb-org
      ansible.builtin.apt:
        name: "mongodb-org"
        update_cache: yes
        state: present

    - name: add Open5GS PPA
      apt_repository:
        #validate_certs: no
        repo: 'ppa:open5gs/latest'
        state: present

    - name: Install open5gs 2.7.2~* via ppa
      ansible.builtin.apt:
        name: open5gs=2.7.2~*
        state: present

    - name: Install bmon
      ansible.builtin.apt:
        name: "bmon"
        state: present

    - name: copy changed Open5GS configs
      block:
        #- name: Copy upf config
        #  ansible.builtin.copy:
        #    src: "{{ project_dir_local }}files/open5gs/upf.yaml"
        #    dest: /etc/open5gs/
        #  become: true
        #  register: config_changed
        - name: render NRF config
          template:
            src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/open5gs/nrf.yaml.j2
            dest: /etc/open5gs/nrf.yaml
            backup: true
          register: config_changed
        - name: Fill in GTP Addresses in UPF config
          template:
            src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/open5gs/upf.yaml.j2
            dest: /etc/open5gs/upf.yaml
            backup: true
          register: config_changed
        - name: render AMF config
          template:
            src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/open5gs/amf.yaml.j2
            dest: /etc/open5gs/amf.yaml
            backup: true
          register: config_changed
        - name: render SMF config
          template:
            src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/open5gs/smf.yaml.j2
            dest: /etc/open5gs/smf.yaml
            backup: true
          register: config_changed
        - name: render NSSF config
          template:
            src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/open5gs/nssf.yaml.j2
            dest: /etc/open5gs/nssf.yaml
            backup: true
          register: config_changed

    - name:
      when: install_webgui
      block:
        - name: add nodejs PPA
          block:
            - name: node |no apt key
              ansible.builtin.get_url:
                url: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
                dest: /etc/apt/keyrings/nodesource-repo.gpg.asc

            - name: nodejs 20.x| apt source
              ansible.builtin.apt_repository:
                repo: "deb [signed-by=/etc/apt/keyrings/nodesource-repo.gpg.asc] https://deb.nodesource.com/node_20.x nodistro main"
                state: present
              register: nodejsaptsource

        - name: install nodejs packages
          apt:
            name: nodejs
            update_cache: yes

        - name: install open5gs webui
          when: nodejsaptsource.changed
          block:
            - name: install webui source
              shell: 'curl -fsSL https://open5gs.org/open5gs/assets/webui/install | sudo -E bash -'

            # file module will create a directory if missing
            - name: Create open5gs-webui.service.d directory
              file:
                path: /etc/systemd/system/open5gs-webui.service.d/
                state: directory
                owner: root
                group: root
                mode: 0755

            # template module will create a file
            - name: Copy open5gs-webui.service drop-in
              copy:
                src: /lib/systemd/system/open5gs-webui.service
                dest: /etc/systemd/system/open5gs-webui.service.d/override.conf
                owner: root
                group: root
                remote_src: yes
                mode: 0644

            - name: Ensure open5gs-webui service listen on all interfaces
              lineinfile:
                path: /etc/systemd/system/open5gs-webui.service.d/override.conf
                insertafter: 'Environment=NODE_ENV=production'
                line: 'Environment=HOSTNAME="0.0.0.0"'

            - name: Fixing the override.conf file and reloading the services config files
              lineinfile:
                path: /etc/systemd/system/open5gs-webui.service.d/override.conf
                insertafter: 'Environment=HOSTNAME="0.0.0.0"'
                line: 'ExecStart='

            - name: systemd daemon-reload
              ansible.builtin.systemd:
                daemon_reload: yes

            - name: restart open5gs-webui
              service:
                name: open5gs-webui
                state: restarted


    - name: Copy open5gs-dbctl
      ansible.builtin.copy:
        src: "{{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/files/open5gs-dbctl"
        dest: /usr/local/bin/
        mode: +x
      become: true

    - name: generate add-test-ue
      template:
        src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/add-test-ues.sh.j2
        dest: /etc/open5gs/add-test-ues.sh
        backup: true
        mode: +x
      become: true
      register: add_ue_script

    - name: add UEs to UDM
      ansible.builtin.command:
        cmd: /etc/open5gs/add-test-ues.sh
      when: add_ue_script.changed

    - name: render ue subnet into 99-open5gs.network
      template:
        src: {{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/templates/99-open5gs.network.j2
        dest: /etc/systemd/network/99-open5gs.network
        backup: true
      register: networkd_changed

    - name: reload networkctl
      ansible.builtin.command:
        cmd: "networkctl reload"
      changed_when: false
      when: networkd_changed.changed

    - name: disable UFW
      service:
        name: ufw
        state: stopped
        enabled: false

    - name: Copy sysctl.d/10-o5gc.conf
      ansible.builtin.copy:
        src: "{{ workspace }}/{{ component_type }}/code/{{ site_hypervisor }}/cac/02_install/files/sysctl_10-5g_forward.conf"
        dest: /etc/sysctl.d/10-5g_forwarding.conf
      become: true

    - name: reload sysctl
      ansible.builtin.command:
        cmd: "sysctl -w --system"
      changed_when: false

    - name: Disable Open5GS 4G parts
      block:
      - name: disable mme
        service:
          name: open5gs-mmed
          state: stopped
          enabled: false
      - name: disable sgwc
        service:
          name: open5gs-sgwcd
          state: stopped
          enabled: false
      - name: disable sgwu
        service:
          name: open5gs-sgwud
          state: stopped
          enabled: false

    - name: restart open5gs components if config changed
      block:
      - name: Restart UPF if Config Changed
        service:
          name: open5gs-upfd
          state: restarted
      - name: Restart SMF if Config Changed
        service:
          name: open5gs-smfd
          state: restarted
      - name: Restart NRF if Config Changed
        service:
          name: open5gs-nrfd
          state: restarted
      - name: Restart AMF if Config Changed
        service:
          name: open5gs-amfd
          state: restarted
      - name: Restart NSSF if Config Changed
        service:
          name: open5gs-nssfd
          state: restarted
      when: config_changed.changed
